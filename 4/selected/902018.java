package reports.circulation;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.Enumeration;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.Timer;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author santosh
 */
public class GenerateProfitableReport extends javax.swing.JInternalFrame {

    File createFile = null;

    Timer timer = null;

    private int minValue = 1;

    /** Creates new form GenerateProfitableReport */
    public GenerateProfitableReport() {
        initComponents();
        this.setSize(600, 450);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        jPanel1.setLayout(new java.awt.GridBagLayout());
        jPanel2.setLayout(new java.awt.GridBagLayout());
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Complete");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        jPanel2.add(jRadioButton1, gridBagConstraints);
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Profit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        jPanel2.add(jRadioButton2, gridBagConstraints);
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Loss");
        jPanel2.add(jRadioButton3, new java.awt.GridBagConstraints());
        jPanel1.add(jPanel2, new java.awt.GridBagConstraints());
        jPanel3.setLayout(new java.awt.GridBagLayout());
        jLabel1.setText("Select file to generate report :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        jPanel3.add(jLabel1, gridBagConstraints);
        jTextField1.setColumns(20);
        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        jPanel3.add(jTextField1, gridBagConstraints);
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        jPanel3.add(jButton1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel1.add(jPanel3, gridBagConstraints);
        jPanel4.setLayout(new java.awt.GridBagLayout());
        jProgressBar1.setPreferredSize(new java.awt.Dimension(446, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel4.add(jProgressBar1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel1.add(jPanel4, gridBagConstraints);
        jPanel5.setLayout(new java.awt.GridBagLayout());
        jButton2.setText("Generate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2, new java.awt.GridBagConstraints());
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        jPanel1.add(jPanel5, gridBagConstraints);
        getContentPane().add(jPanel1, new java.awt.GridBagConstraints());
        pack();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File file) {
                boolean status = false;
                try {
                    String fileName = file.getName().toLowerCase();
                    status = fileName.endsWith(".csv");
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return status;
            }

            @Override
            public String getDescription() {
                return ".csv";
            }
        });
        int i = chooser.showSaveDialog(this);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (i == JFileChooser.APPROVE_OPTION) {
            String file = chooser.getSelectedFile().toString();
            StringTokenizer str = new StringTokenizer(file, ".");
            if (str.countTokens() <= 2) {
                if (str.countTokens() == 1) {
                    createFile = new File(chooser.getSelectedFile().toString() + ".csv");
                    if (createFile.exists()) {
                        int cnt = JOptionPane.showConfirmDialog(this, "This file already exists ! Are you sure \n you want to over write it.", "check", JOptionPane.OK_CANCEL_OPTION);
                        if (cnt == 0) {
                            jTextField1.setText(createFile.toString());
                            System.out.println("override");
                        } else {
                            createFile = null;
                            jTextField1.setText("");
                        }
                    } else {
                        jTextField1.setText(createFile.toString());
                    }
                } else {
                    str.nextToken();
                    String s1 = str.nextToken(".");
                    if (s1.equalsIgnoreCase("csv")) {
                        createFile = new File(chooser.getSelectedFile().toString());
                        if (createFile.exists()) {
                            int cnt = JOptionPane.showConfirmDialog(this, "This file already exists ! Are you sure \n you want to over write it.", "check", JOptionPane.OK_CANCEL_OPTION);
                            if (cnt == 0) {
                                jTextField1.setText(createFile.toString());
                                System.out.println("override");
                            } else {
                                createFile = null;
                                jTextField1.setText("");
                            }
                        } else {
                            jTextField1.setText(createFile.toString());
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "The given file is not in .csv format \n Please create .csv extension.", "check", JOptionPane.CANCEL_OPTION);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "The given file name is not correct \n Please create a new file.", "check", JOptionPane.YES_OPTION);
            }
        } else {
            jTextField1.setText("");
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        if (createFile != null) {
            String radioText = "";
            Enumeration e = buttonGroup1.getElements();
            while (e.hasMoreElements()) {
                JRadioButton jb = (JRadioButton) e.nextElement();
                if (jb.isSelected()) {
                    radioText = jb.getText();
                }
            }
            final BookProfitReport bpr = new BookProfitReport();
            bpr.setFileName(createFile.toString());
            bpr.setFormat(radioText);
            Thread t = new Thread(bpr);
            t.start();
            try {
                Thread.sleep(1000);
            } catch (Exception e1) {
                e1.printStackTrace();
            }
            jProgressBar1.setMaximum(bpr.getTotalCount().intValue());
            jProgressBar1.setMinimum(minValue);
            timer = new Timer(1000, new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent ae) {
                    System.out.println("bpr.getCurrentStatusCount() is ::::" + bpr.getCurrentStatusCount());
                    jProgressBar1.setValue(bpr.getCurrentStatusCount().intValue());
                    if (bpr.getTotalCount().intValue() == bpr.getCurrentStatusCount().intValue()) {
                        if (timer != null) {
                            timer.setRepeats(false);
                            timer.stop();
                            System.out.println("Timer is stoped");
                            JOptionPane.showMessageDialog(null, "Report generated", "check", JOptionPane.YES_OPTION);
                        }
                    }
                }
            });
            timer.setRepeats(true);
            timer.start();
        } else {
            JOptionPane.showMessageDialog(this, "Please select the file to generate the date.", "check", JOptionPane.YES_OPTION);
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        if (timer != null) {
            timer.stop();
        }
        this.dispose();
    }

    private javax.swing.ButtonGroup buttonGroup1;

    private javax.swing.JButton jButton1;

    private javax.swing.JButton jButton2;

    private javax.swing.JButton jButton3;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JPanel jPanel4;

    private javax.swing.JPanel jPanel5;

    private javax.swing.JProgressBar jProgressBar1;

    private javax.swing.JRadioButton jRadioButton1;

    private javax.swing.JRadioButton jRadioButton2;

    private javax.swing.JRadioButton jRadioButton3;

    private javax.swing.JTextField jTextField1;
}
