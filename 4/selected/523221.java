package jemu.ui;

import java.io.*;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author Markus
 */
public class SamDisk extends javax.swing.JFrame {

    protected String[] drive = { "a:", "b:", "c:", "d:", "e:", "f:", "g:", "h:", "i:", "j:", "k:", "l:", "m:", "n:", "o:", "p:", "q:", "r:", "s:", "t:", "u:", "v:", "w:", "x:", "y:", "z:" };

    protected String[] track = { "", " -c39", " -c42", " -c79" };

    protected String[] heads = { "", "-h0", "-h1" };

    /** Creates new form SamDisk */
    public SamDisk() {
        initComponents();
        text.setText("SAMdisk GUI 1.2 (May 11 2010), by Markus Hohmann -- http://cpc-live.com/\r\n");
        text.append("SAMdisk 3.0 (Jun  2 2009), by Simon Owen -- http://simonowen.com/samdisk/\r\n");
        text.select(2000000, 2000000);
    }

    int prog = 0;

    protected Process process;

    public void Launch(boolean direction) throws InterruptedException, IOException {
        String file = null;
        if (direction) {
            FileDialog filedia = new FileDialog((Frame) new Frame(), "Create DSK file", FileDialog.SAVE);
            filedia.setFile("*.dsk");
            filedia.setVisible(true);
            String filename = filedia.getFile();
            if (filename != null) {
                filename = filedia.getDirectory() + filedia.getFile();
                if (!filename.toLowerCase().endsWith(".dsk")) filename += ".dsk";
                file = filename;
            }
        } else {
            FileDialog filedia = new FileDialog((Frame) new Frame(), "Open DSK file", FileDialog.LOAD);
            filedia.setFile("*.dsk");
            filedia.setVisible(true);
            String filename = filedia.getFile();
            if (filename != null) {
                filename = filedia.getDirectory() + filedia.getFile();
                file = filename;
            }
        }
        if (file == null) {
            return;
        }
        text.setText("SAMdisk GUI 1.2 (May 11 2010), by Markus Hohmann -- http://cpc-live.com/\r\n");
        text.append("SAMdisk 3.0 (Jun  2 2009), by Simon Owen -- http://simonowen.com/samdisk/\r\n");
        String ending = "";
        if (head.getSelectedIndex() == 1) {
            ending = "-h0";
        }
        if (head.getSelectedIndex() == 2) {
            ending = "-h1";
        }
        String drv = drive[dselect.getSelectedIndex()];
        String command = "";
        if (gaps.isSelected()) {
            ending = ending + " --gaps";
        }
        if (direction) {
            command = drv + " \"" + file + "\" " + ending;
        } else {
            command = "\"" + file + "\" " + drv + " " + ending;
        }
        command += track[tracks.getSelectedIndex()];
        if (dstep.isSelected()) command += " -d";
        if (rescan.isSelected()) command += " -R";
        String n = System.getProperty("user.home") + "/JavaCPC/tools/SamDisk.exe" + command;
        process = Runtime.getRuntime().exec(n);
        text.append("SamDisk.exe " + command + "\r\n");
        text.select(20000000, 20000000);
        InputStream is = process.getInputStream();
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);
        String line;
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
        progress.setIndeterminate(true);
        while ((line = br.readLine()) != null) {
            text.append(line + "\r\n");
            text.select(20000000, 20000000);
        }
        br.close();
        text.append("Done...\r\n");
        text.select(20000000, 20000000);
        progress.setIndeterminate(false);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        prog = 0;
        process = null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        write = new javax.swing.JToggleButton();
        read = new javax.swing.JToggleButton();
        info = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();
        jButton2 = new javax.swing.JButton();
        gaps = new javax.swing.JCheckBox();
        dselect = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        tracks = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        head = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        dstep = new javax.swing.JCheckBox();
        rescan = new javax.swing.JCheckBox();
        setTitle("SAMdisk GUI ï¿½ by Devilmarkus");
        setFocusable(false);
        setResizable(false);
        buttonGroup1.add(write);
        write.setText("Write DSK to Floppy");
        write.setFocusPainted(false);
        write.setFocusable(false);
        buttonGroup1.add(read);
        read.setSelected(true);
        read.setText("Read Floppy to DSK");
        read.setFocusPainted(false);
        read.setFocusable(false);
        text.setColumns(20);
        text.setEditable(false);
        text.setFont(new java.awt.Font("Monospaced", 1, 12));
        text.setRows(5);
        info.setViewportView(text);
        jButton1.setText("Start");
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        progress.setMaximum(80);
        progress.setFocusable(false);
        jButton2.setText("Abort");
        jButton2.setEnabled(false);
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gaps.setText("GAPs");
        gaps.setFocusPainted(false);
        gaps.setFocusable(false);
        dselect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));
        dselect.setFocusable(false);
        jLabel1.setText("Drive");
        tracks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default", "39 Tracks", "42 Tracks", "79 Tracks" }));
        tracks.setFocusable(false);
        jLabel2.setText("Tracks");
        head.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Both", "Head 0", "Head 1" }));
        head.setSelectedIndex(1);
        head.setFocusable(false);
        jLabel3.setText("Head:");
        dstep.setText("Double step");
        dstep.setFocusPainted(false);
        dstep.setFocusable(false);
        rescan.setText("Rescan");
        rescan.setFocusPainted(false);
        rescan.setFocusable(false);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(write).addGroup(layout.createSequentialGroup().addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton2))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(read)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(gaps).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel1)).addComponent(dstep)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(dselect, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel2)).addComponent(rescan)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE).addComponent(tracks, 0, 143, Short.MAX_VALUE)))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(write).addComponent(read).addComponent(gaps).addComponent(jLabel1).addComponent(dselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2).addComponent(tracks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton1).addComponent(jButton2).addComponent(jLabel3).addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(dstep).addComponent(rescan)).addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE).addContainerGap()));
        pack();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        if (process == null) {
            Thread runner = new Thread() {

                public void run() {
                    try {
                        Launch(read.isSelected());
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            };
            runner.start();
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        if (process != null) {
            process.destroy();
            text.append("Progress aborted...\r\n");
            progress.setIndeterminate(false);
            jButton1.setEnabled(true);
            jButton2.setEnabled(false);
            prog = 0;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
                } catch (Exception e) {
                }
                SamDisk samdisk = new SamDisk();
                samdisk.setVisible(true);
                samdisk.setDefaultCloseOperation(EXIT_ON_CLOSE);
            }
        });
    }

    private javax.swing.ButtonGroup buttonGroup1;

    private javax.swing.JComboBox dselect;

    private javax.swing.JCheckBox dstep;

    private javax.swing.JCheckBox gaps;

    private javax.swing.JComboBox head;

    private javax.swing.JScrollPane info;

    private javax.swing.JButton jButton1;

    private javax.swing.JButton jButton2;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JProgressBar progress;

    private javax.swing.JToggleButton read;

    private javax.swing.JCheckBox rescan;

    private javax.swing.JTextArea text;

    private javax.swing.JComboBox tracks;

    private javax.swing.JToggleButton write;
}
