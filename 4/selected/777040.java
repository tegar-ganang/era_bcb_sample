package uydka;

import java.io.*;
import java.net.*;
import java.awt.event.*;
import java.beans.*;
import javax.swing.*;
import java.awt.*;

/**
 *
 * @author  jonas
 */
public class Form extends javax.swing.JFrame implements ActionListener, PropertyChangeListener {

    private String ytUrl = null;

    private String ytTitle = null;

    private String ytFullUrl = null;

    private String ytFileName = null;

    private Task task = null;

    private int length = 0;

    private int totaldown = 0;

    private int bytes_read = 0;

    class Task extends SwingWorker<Void, Void> {

        @Override
        public Void doInBackground() {
            progressDown.setValue(0);
            progressDown.setStringPainted(true);
            try {
                URL gUrl = new URL(ytFullUrl);
                HttpURLConnection hconn = (HttpURLConnection) gUrl.openConnection();
                hconn.setDoInput(true);
                hconn.setFollowRedirects(true);
                length = hconn.getContentLength();
                System.out.println("Length: " + length);
                InputStream in = null;
                OutputStream out = null;
                ytFileName = ytTitle.replaceAll("[^0-9A-Za-z-ÅÄÖåäö]", "_");
                ytFileName = System.getProperty("user.home") + "/" + ytFileName + ".flv";
                lblFileInfo.setText("Downloading to: " + ytFileName);
                in = hconn.getInputStream();
                out = new FileOutputStream(ytFileName);
                byte[] buffer = new byte[4096];
                totaldown = 0;
                bytes_read = 0;
                int progress = 0;
                double p = 0.00;
                while ((bytes_read = in.read(buffer)) != -1) {
                    out.write(buffer, 0, bytes_read);
                    totaldown += bytes_read;
                    p = ((double) totaldown / (double) length) * 100;
                    progress = (int) p;
                    setProgress(Math.min(progress, 100));
                    System.out.println("total: " + totaldown + " / " + length + " (" + (int) progress + "%)  --> " + ytFileName);
                }
                in.close();
                out.close();
            } catch (Exception e) {
                System.err.println(e.getLocalizedMessage());
            }
            return null;
        }

        @Override
        public void done() {
            btnDownload.setEnabled(true);
            progressDown.setString("File download completed");
        }
    }

    /** Creates new form Form */
    public Form() {
        try {
            String laf = UIManager.getSystemLookAndFeelClassName();
            UIManager.setLookAndFeel(laf);
        } catch (Exception e) {
        }
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        btnDownload = new javax.swing.JButton();
        lblUrl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        progressDown = new javax.swing.JProgressBar();
        lblTitle = new javax.swing.JLabel();
        lblFileInfo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ultimate Youtube Downloader");
        jLabel1.setText("Youtube url:");
        btnDownload.setText("Download");
        btnDownload.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });
        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 18));
        jLabel2.setText("Ultimate Youtube Downloader");
        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        jLabel3.setText("Example: http://youtube.com/watch?v=CRv-7lAWBqM");
        progressDown.setString("Waiting for file..");
        progressDown.setStringPainted(true);
        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        jLabel4.setText("Jonas Björk, jonas.bjork@gmail.com [2008]");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(progressDown, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(lblFileInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(lblTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lblUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnDownload))).addContainerGap(24, Short.MAX_VALUE)))));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel2).addGap(3, 3, 3).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(lblUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnDownload)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lblTitle).addGap(2, 2, 2).addComponent(lblFileInfo).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(progressDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(80, Short.MAX_VALUE)));
        pack();
    }

    private void setUrl(String u) {
        ytUrl = u;
        System.out.println("URL = " + ytUrl);
    }

    private String getFullScreenUrl() {
        progressDown.setIndeterminate(true);
        System.out.println("Har: " + ytUrl);
        String u = ytUrl;
        URLConnection conn = null;
        String line = null;
        String data = "";
        String fullUrl = "";
        try {
            URL url = new URL(u);
            conn = url.openConnection();
            conn.setDoOutput(true);
            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            while ((line = rd.readLine()) != null) {
                if (line.contains("fullscreenUrl")) {
                    data = line.trim();
                }
            }
            rd.close();
            System.out.println(data);
            int start = 0;
            String[] lines = data.split("&");
            String[] tmp = null;
            String video_id = null;
            String t = null;
            String title = null;
            for (int i = 0; i < lines.length; i++) {
                if (lines[i].startsWith("video_id=")) {
                    tmp = lines[i].split("=");
                    video_id = tmp[1];
                }
                if (lines[i].startsWith("t=")) {
                    tmp = lines[i].split("=");
                    t = tmp[1];
                }
                if (lines[i].startsWith("title=")) {
                    tmp = lines[i].split("=");
                    title = tmp[1].substring(0, (tmp[1].length() - 2));
                }
                System.out.println(lines[i]);
            }
            System.out.println("So we got...");
            System.out.println("video_id: " + video_id);
            System.out.println("t: " + t);
            System.out.println("title: " + title);
            ytTitle = title;
            fullUrl = "http://www.youtube.com/get_video.php?video_id=" + video_id + "&t=" + t;
        } catch (Exception e) {
            System.err.println("Error: " + e.getLocalizedMessage());
        }
        progressDown.setIndeterminate(false);
        return fullUrl;
    }

    private void getFile(String getUrl) {
    }

    public void actionPerformed(ActionEvent evt) {
    }

    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().contentEquals("progress")) {
            int progress = (Integer) evt.getNewValue();
            progressDown.setValue(progress);
            String p = Integer.toString(task.getProgress());
            progressDown.setString(totaldown + " / " + length + " (" + p + "%)");
        }
    }

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {
        btnDownload.setEnabled(false);
        String u = lblUrl.getText();
        setUrl(u);
        String furl = getFullScreenUrl();
        ytFullUrl = furl;
        System.out.println("Fullurl = " + furl);
        lblTitle.setText("Title: " + ytTitle);
        task = new Task();
        task.addPropertyChangeListener(this);
        task.execute();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    private javax.swing.JButton btnDownload;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel lblFileInfo;

    private javax.swing.JLabel lblTitle;

    private javax.swing.JTextField lblUrl;

    private javax.swing.JProgressBar progressDown;
}
