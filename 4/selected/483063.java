package YouTube.Frames;

import Core.Downloader;
import Core.Files;
import YouTube.*;
import com.google.gdata.client.youtube.YouTubeService;
import com.google.gdata.data.youtube.PlaylistEntry;
import com.google.gdata.data.youtube.UserProfileEntry;
import com.google.gdata.data.youtube.VideoEntry;
import java.awt.Component;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.Format;
import javax.media.Manager;
import javax.media.PackageManager;
import javax.media.Player;
import javax.media.PlugInManager;
import javax.media.format.AudioFormat;
import javax.media.format.RGBFormat;
import javax.media.format.VideoFormat;
import javax.media.protocol.ContentDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.HyperlinkEvent.EventType;

/**
 *
 * @author H3R3T1C
 */
public class mPlayer extends javax.swing.JFrame {

    /** Creates new form mPlayer */
    public mPlayer() {
        initComponents();
    }

    private Video video;

    private Player mediaPlayer;

    private YouTubeService yts;

    private mPlayer player = this;

    private JList list;

    private RemoteFileProxy filep;

    public mPlayer(Video v, final YouTubeService yts, JList list) {
        this.video = v;
        this.yts = yts;
        this.list = list;
        initComponents();
        new Thread(new Runnable() {

            public void run() {
                URL url = null;
                jLabel1.setText(video.getRatingGui());
                jLabel2.setText(video.getName());
                jTextArea1.setText(video.getDescription());
                jTextArea1.setCaretPosition(0);
                jTextField1.setText(video.getWebURL());
                jTextField2.setText(video.getKeywords());
                jLabel4.setText(video.getUploader());
                DefaultListModel model = new DefaultListModel();
                for (VideoEntry vs : video.getRelatedVideos(yts)) {
                    model.addElement(new RelatedVideo(vs));
                }
                jList1.setModel(model);
                jLabel3.setText(video.getViewCount());
                jEditorPane1.setText(video.getComments(yts));
                jEditorPane1.setCaretPosition(0);
                mediaPlayer = null;
                try {
                    filep = new RemoteFileProxy(new URL(video.getVideoURL()));
                    url = filep.startDownloadAndGetProxyURL();
                    mediaPlayer = Manager.createRealizedPlayer(url);
                    Component videoPane = mediaPlayer.getVisualComponent();
                    Component controls = mediaPlayer.getControlPanelComponent();
                    jPanel1.add(videoPane);
                    jPanel3.add(controls);
                    videoPane.setLocation(0, 0);
                    videoPane.setSize(jPanel1.getSize());
                    controls.setLocation(0, 0);
                    controls.setSize(jPanel3.getSize());
                    mediaPlayer.start();
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "The Video could not be played!");
                    player.dispose();
                }
            }
        }).start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        playlist = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jFrame1 = new javax.swing.JFrame();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rating = new javax.swing.JFrame();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jToolBar2 = new javax.swing.JToolBar();
        jTextField1 = new javax.swing.JTextField();
        jToolBar3 = new javax.swing.JToolBar();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        playlist.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        playlist.setTitle("Select Playlist");
        playlist.setResizable(false);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Select a plalist");
        jButton7.setText("OK");
        jButton7.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton8.setText("Cancel");
        jButton8.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout playlistLayout = new javax.swing.GroupLayout(playlist.getContentPane());
        playlist.getContentPane().setLayout(playlistLayout);
        playlistLayout.setHorizontalGroup(playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(playlistLayout.createSequentialGroup().addContainerGap().addGroup(playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE).addComponent(jComboBox1, 0, 195, Short.MAX_VALUE).addGroup(playlistLayout.createSequentialGroup().addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE).addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        playlistLayout.setVerticalGroup(playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(playlistLayout.createSequentialGroup().addContainerGap().addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton7).addComponent(jButton8)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jFrame1.setTitle("Add comment");
        jFrame1.setResizable(false);
        jButton10.setText("Cancel");
        jButton10.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jButton11.setText("Add Comment");
        jButton11.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {

            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea2KeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTextArea2);
        jLabel7.setText("Charactors left:");
        jLabel8.setText("500");
        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup().addContainerGap().addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jFrame1Layout.createSequentialGroup().addComponent(jButton11).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE).addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        jFrame1Layout.setVerticalGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton10).addComponent(jButton11).addComponent(jLabel7).addComponent(jLabel8)).addContainerGap()));
        rating.setTitle("Add Rating");
        rating.setResizable(false);
        jButton12.setText("Add");
        jButton12.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jButton13.setText("Cancel");
        jButton13.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        javax.swing.GroupLayout ratingLayout = new javax.swing.GroupLayout(rating.getContentPane());
        rating.getContentPane().setLayout(ratingLayout);
        ratingLayout.setHorizontalGroup(ratingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(ratingLayout.createSequentialGroup().addContainerGap().addGroup(ratingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jComboBox2, 0, 138, Short.MAX_VALUE).addGroup(ratingLayout.createSequentialGroup().addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton13))).addContainerGap()));
        ratingLayout.setVerticalGroup(ratingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ratingLayout.createSequentialGroup().addContainerGap().addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(ratingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton12).addComponent(jButton13)).addContainerGap()));
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Video Player");
        setResizable(false);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel5.setText("Loading...");
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(205, 205, 205).addComponent(jLabel5).addContainerGap(212, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(125, 125, 125).addComponent(jLabel5).addContainerGap(139, Short.MAX_VALUE)));
        jLabel1.setText("Rating");
        jLabel1.setToolTipText("Click to add rating");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Video Title");
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Bookman Old Style", 0, 13));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);
        jToolBar2.setBorder(javax.swing.BorderFactory.createTitledBorder("Web URL"));
        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jTextField1.setEditable(false);
        jTextField1.setText("web url text");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jToolBar2.add(jTextField1);
        jToolBar3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tags"));
        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);
        jTextField2.setEditable(false);
        jTextField2.setText("keywords");
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });
        jToolBar3.add(jTextField2);
        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel4.setForeground(new java.awt.Color(0, 51, 255));
        jLabel4.setText("Uploader");
        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Uploader"));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE).addContainerGap()).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE).addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE).addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)).addContainerGap()));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addComponent(jLabel4).addGap(11, 11, 11).addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Related Videos"));
        jScrollPane1.setViewportView(jList1);
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Views");
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Comments"));
        jEditorPane1.setContentType("text/html");
        jEditorPane1.setEditable(false);
        jEditorPane1.setText("<html>\r\n  <head>\r\n\r\n  </head>\r\n  <body>\r\n    <p style=\"margin-top: 0\">\r\n \n    </p>\r\n  </body>\r\n</html>\r\n");
        jEditorPane1.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {

            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                jEditorPane1HyperlinkUpdate(evt);
            }
        });
        jScrollPane3.setViewportView(jEditorPane1);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 466, Short.MAX_VALUE));
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 27, Short.MAX_VALUE));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add To Favorite.png")));
        jButton3.setToolTipText("Add to Favorites");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add Green Button.png")));
        jButton4.setToolTipText("Add to Playlist");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/kdmconfig.png")));
        jButton5.setToolTipText("Share");
        jButton5.setEnabled(false);
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton5);
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/readme.png")));
        jButton6.setToolTipText("Flag");
        jButton6.setEnabled(false);
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton6);
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hdd_mount.png")));
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Discussion.png")));
        jButton9.setToolTipText("Add Comment");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel2).addGap(14, 14, 14).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1)).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel3).addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))).addContainerGap()));
        pack();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            filep.bis.close();
            filep.is.close();
            filep.raFile.close();
            mediaPlayer.close();
            mediaPlayer.deallocate();
            System.gc();
            this.dispose();
        } catch (Exception ex) {
            ex.printStackTrace();
            this.dispose();
        }
    }

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {
        jTextField1.selectAll();
    }

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        video.addToFavs(yts);
        JOptionPane.showMessageDialog(null, "Video Added to Favorites!");
    }

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {
        try {
            String profileUrl = "http://gdata.youtube.com/feeds/api/users/" + jLabel4.getText();
            UserProfileEntry profileEntry = yts.getEntry(new URL(profileUrl), UserProfileEntry.class);
            new AccountInfo(profileEntry, yts).show();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        playlist.show();
        playlist.pack();
        playlist.setLocationRelativeTo(null);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < list.getModel().getSize(); i++) {
            model.addElement(list.getModel().getElementAt(i));
        }
        jComboBox1.setModel(model);
    }

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {
        playlist.hide();
    }

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            PlayList plist = (PlayList) jComboBox1.getSelectedItem();
            String playlistUrl = plist.getURL();
            String videoEntryUrl = "http://gdata.youtube.com/feeds/api/videos/" + video.getID();
            VideoEntry videoEntry = yts.getEntry(new URL(videoEntryUrl), VideoEntry.class);
            PlaylistEntry playlistEntry = new PlaylistEntry(videoEntry);
            yts.insert(new URL(playlistUrl), playlistEntry);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        playlist.hide();
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        new Thread(new Runnable() {

            public void run() {
                jButton2.setEnabled(false);
                new Downloader(new File(Files.saveFileDir() + video.getID() + ".flv"), video.getID() + ".flv", video.getVideoURL()).show();
            }
        }).start();
    }

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {
        jFrame1.hide();
    }

    private void jTextArea2KeyPressed(java.awt.event.KeyEvent evt) {
        if (jTextArea2.getText().length() >= 500) {
            evt.consume();
        }
        int i = 500 - jTextArea2.getText().length() - 1;
        jLabel8.setText("" + i);
    }

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {
        jFrame1.show();
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(null);
    }

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {
        video.addComment(jTextArea2.getText(), yts);
        jEditorPane1.setText(video.getComments(yts));
        jEditorPane1.setCaretPosition(0);
        jFrame1.hide();
    }

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {
    }

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {
        rating.hide();
    }

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {
        video.setRating(jComboBox2.getSelectedIndex() + 1, yts);
        rating.hide();
        jLabel1.setText(video.getRatingGui());
    }

    private void jEditorPane1HyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
        if (evt.getEventType() == EventType.ACTIVATED) {
            String s = evt.getURL().toString();
            System.out.println(s);
            if (s.contains("User/")) {
                s = s.substring(12, s.lastIndexOf("."));
                try {
                    String profileUrl = "http://gdata.youtube.com/feeds/api/users/" + s;
                    UserProfileEntry profileEntry = yts.getEntry(new URL(profileUrl), UserProfileEntry.class);
                    new AccountInfo(profileEntry, yts).show();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }

    private static boolean isFobsInited(Vector rendList) {
        String rname = null;
        for (int i = 0; i < rendList.size(); i++) {
            rname = (String) (rendList.elementAt(i));
            if (rname.equals("com.omnividea.media.parser.video.Parser")) {
                return true;
            }
        }
        return false;
    }

    private static void initFobs() {
        Vector rendererlist = PlugInManager.getPlugInList(null, null, PlugInManager.DEMULTIPLEXER);
        if (isFobsInited(rendererlist)) {
            System.out.println("FOBS Detected!");
            return;
        }
        System.out.println("Enabling FOBS");
        Format[] ffmpegformat = new VideoFormat[] { new VideoFormat("FFMPEG_VIDEO") };
        Format[] ffmpegdesc = new ContentDescriptor[] { new ContentDescriptor("video.ffmpeg") };
        Format[] ffmpegaudio = new Format[] { new AudioFormat("FFMPEG_AUDIO") };
        Format[] supportedInputFormats = new VideoFormat[] { new VideoFormat("iv31"), new VideoFormat("iv32"), new VideoFormat("msvc"), new VideoFormat("cram"), new VideoFormat("wham"), new VideoFormat("wmv1"), new VideoFormat("wmv2"), new VideoFormat("mpeg"), new VideoFormat("mpg1"), new VideoFormat("mpg2"), new VideoFormat("pim1"), new VideoFormat("vcr2"), new VideoFormat("mjpa"), new VideoFormat("mjpb"), new VideoFormat("mjpg"), new VideoFormat("ljpg"), new VideoFormat("jpgl"), new VideoFormat("avdj"), new VideoFormat("svq1"), new VideoFormat("svqi"), new VideoFormat("svq3"), new VideoFormat("mp4v"), new VideoFormat("divx"), new VideoFormat("dx50"), new VideoFormat("xvid"), new VideoFormat("mp4s"), new VideoFormat("m4s2"), new VideoFormat("div1"), new VideoFormat("blz0"), new VideoFormat("ump4"), new VideoFormat("h264"), new VideoFormat("h263"), new VideoFormat("u263"), new VideoFormat("viv1"), new VideoFormat("i263"), new VideoFormat("dvc"), new VideoFormat("dvcp"), new VideoFormat("dvsd"), new VideoFormat("dvhs"), new VideoFormat("dvs1"), new VideoFormat("dv25"), new VideoFormat("vp31"), new VideoFormat("rpza"), new VideoFormat("cvid"), new VideoFormat("smc"), new VideoFormat("mp42"), new VideoFormat("div2"), new VideoFormat("mpg4"), new VideoFormat("div3"), new VideoFormat("mp43"), new VideoFormat("mpg3"), new VideoFormat("div5"), new VideoFormat("div6"), new VideoFormat("div4"), new VideoFormat("ap41"), new VideoFormat("col1"), new VideoFormat("col0") };
        Format[] frgb = new VideoFormat[] { new RGBFormat() };
        Format[] alinear = new AudioFormat[] { new AudioFormat("LINEAR") };
        Vector plist = PlugInManager.getPlugInList(null, null, PlugInManager.RENDERER);
        Object last = plist.lastElement();
        plist.insertElementAt(last, 0);
        plist.remove(plist.lastIndexOf(last));
        PlugInManager.setPlugInList(plist, PlugInManager.RENDERER);
        try {
            PlugInManager.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("RENDERER\n" + plist.toString());
        Format[] In;
        Format[] Out;
        In = ffmpegdesc;
        Out = null;
        PlugInManager.addPlugIn("com.omnividea.media.parser.video.Parser", In, Out, PlugInManager.DEMULTIPLEXER);
        plist = PlugInManager.getPlugInList(null, null, PlugInManager.DEMULTIPLEXER);
        System.out.println("DEMULTIPLEXER\n" + plist.toString());
        In = ffmpegformat;
        Out = frgb;
        PlugInManager.addPlugIn("com.omnividea.media.codec.video.NativeDecoder", In, Out, PlugInManager.CODEC);
        In = ffmpegaudio;
        Out = alinear;
        PlugInManager.addPlugIn("com.omnividea.media.codec.audio.NativeDecoder", In, Out, PlugInManager.CODEC);
        In = supportedInputFormats;
        Out = frgb;
        PlugInManager.addPlugIn("com.omnividea.media.codec.video.JavaDecoder", In, Out, PlugInManager.CODEC);
        plist = PlugInManager.getPlugInList(null, null, PlugInManager.CODEC);
        System.out.println("CODECS\n" + plist.toString());
        Vector packagePrefix = PackageManager.getProtocolPrefixList();
        String myPackagePrefix = new String("com.omnividea");
        packagePrefix.add(0, myPackagePrefix);
        PackageManager.setProtocolPrefixList(packagePrefix);
        System.out.println(PackageManager.getProtocolPrefixList().toString());
        return;
    }

    private class RemoteFileProxy {

        private URL remoteUrl;

        private File tempFile;

        private boolean canStart = false;

        RandomAccessFile raFile;

        InputStream is;

        BufferedInputStream bis;

        public RemoteFileProxy(URL location) {
            this.remoteUrl = location;
            try {
                tempFile = File.createTempFile("googleme_", ".flv");
                tempFile.deleteOnExit();
                System.out.println("Created tempfile: " + tempFile);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

        public URL startDownloadAndGetProxyURL() {
            startDownload();
            while (!canStart) {
                try {
                    Thread.sleep(250);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            try {
                System.out.println("3% prebuffer finished, passing URL to player");
                return tempFile.toURI().toURL();
            } catch (MalformedURLException e) {
                e.printStackTrace();
                return null;
            }
        }

        private void startDownload() {
            new Thread(new Runnable() {

                private double TRESHOLD = 1024 * 1024;

                public void run() {
                    try {
                        raFile = new RandomAccessFile(tempFile, "rwd");
                        URLConnection conn = remoteUrl.openConnection();
                        is = conn.getInputStream();
                        bis = new BufferedInputStream(is);
                        byte[] buffer = new byte[64000];
                        raFile.setLength(conn.getContentLength());
                        System.out.println("File Size: " + conn.getContentLength());
                        TRESHOLD = conn.getContentLength() * 0.03;
                        raFile.getChannel().force(true);
                        raFile.seek(0);
                        int read = 0;
                        double counter = 0;
                        while ((read = bis.read(buffer, 0, 64000)) != -1) {
                            raFile.write(buffer, 0, read);
                            counter += read;
                            if (counter > TRESHOLD) {
                                canStart = true;
                            }
                        }
                        bis.close();
                        raFile.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }, "RemoteFileProxy: " + remoteUrl).start();
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new mPlayer().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButton1;

    private javax.swing.JButton jButton10;

    private javax.swing.JButton jButton11;

    private javax.swing.JButton jButton12;

    private javax.swing.JButton jButton13;

    private javax.swing.JButton jButton2;

    private javax.swing.JButton jButton3;

    private javax.swing.JButton jButton4;

    private javax.swing.JButton jButton5;

    private javax.swing.JButton jButton6;

    private javax.swing.JButton jButton7;

    private javax.swing.JButton jButton8;

    private javax.swing.JButton jButton9;

    private javax.swing.JComboBox jComboBox1;

    private javax.swing.JComboBox jComboBox2;

    private javax.swing.JEditorPane jEditorPane1;

    private javax.swing.JFrame jFrame1;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel8;

    private javax.swing.JList jList1;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JScrollPane jScrollPane3;

    private javax.swing.JScrollPane jScrollPane4;

    private javax.swing.JSeparator jSeparator1;

    private javax.swing.JTextArea jTextArea1;

    private javax.swing.JTextArea jTextArea2;

    private javax.swing.JTextField jTextField1;

    private javax.swing.JTextField jTextField2;

    private javax.swing.JToolBar jToolBar1;

    private javax.swing.JToolBar jToolBar2;

    private javax.swing.JToolBar jToolBar3;

    private javax.swing.JFrame playlist;

    private javax.swing.JFrame rating;
}
