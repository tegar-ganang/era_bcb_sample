package com.umc.gui.content.config;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import org.apache.log4j.Logger;
import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.LayoutStyle;
import com.umc.ConfigController;
import com.umc.gui.GuiController;
import com.umc.gui.models.VdrTableModel;
import com.umc.helper.UMCLanguage;
import de.umcProject.xmlbeans.UmcConfigDocument.UmcConfig.Tv.Channel;

/**
 *
 * @author Administrator
 */
public class MediacenterVdrPanel extends javax.swing.JPanel {

    /**
	 * 
	 */
    private static final long serialVersionUID = 3883850910517029464L;

    public static final String ID = "MEDIACENTERVDR";

    private static Logger log = Logger.getLogger("com.umc.file");

    private List<String> tags;

    private JButton btnAddVdr;

    private JButton btnRemVdr;

    private JScrollPane jScrollPane1;

    private JTable tableVdr;

    private VdrTableModel tableVdrModel;

    /** Creates new form MediacenterRssPanel */
    public MediacenterVdrPanel() {
        initComponents();
        initContent();
    }

    private void initContent() {
        tags = Arrays.asList(UMCLanguage.getText("MediacenterVdrPanel.tags").split(","));
        Channel[] channel = ConfigController.getInstance().getUMCConfig().getTv().getChannelArray();
        for (int i = 0; i < channel.length; i++) {
            tableVdrModel.addChannel(channel[i]);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jScrollPane1 = new JScrollPane();
        tableVdr = new JTable();
        btnAddVdr = new JButton();
        btnRemVdr = new JButton();
        tableVdr.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableVdr.setAutoCreateColumnsFromModel(true);
        tableVdr.setDragEnabled(false);
        tableVdr.setFillsViewportHeight(true);
        tableVdr.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        tableVdr.setRowHeight(22);
        List<String> columns = new ArrayList<String>();
        columns.add(UMCLanguage.getText("MediacenterVdrPanel.table.column1", ConfigController.getInstance().getSelectedLanguage()));
        columns.add(UMCLanguage.getText("MediacenterVdrPanel.table.column2", ConfigController.getInstance().getSelectedLanguage()));
        try {
            tableVdrModel = new VdrTableModel(columns);
        } catch (Exception e) {
            log.error("VdrTableError", e);
        }
        tableVdr.setModel(tableVdrModel);
        tableVdr.getColumnModel().getColumn(0).setMaxWidth(100);
        tableVdr.getColumnModel().getColumn(0).setMinWidth(100);
        tableVdr.getColumnModel().getColumn(0).setWidth(100);
        FormListener formListener = new FormListener();
        jScrollPane1.setViewportView(tableVdr);
        btnAddVdr.setIcon(new ImageIcon(getClass().getResource("/com/umc/gui/resources/add2.png")));
        btnAddVdr.addActionListener(formListener);
        btnRemVdr.setIcon(new ImageIcon(getClass().getResource("/com/umc/gui/resources/remove2.png")));
        btnRemVdr.addActionListener(formListener);
        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.LEADING).add(layout.createSequentialGroup().addContainerGap().add(layout.createParallelGroup(GroupLayout.CENTER).add(layout.createSequentialGroup().add(btnAddVdr).addPreferredGap(LayoutStyle.RELATED).add(btnRemVdr)).add(jScrollPane1, GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.LEADING).add(GroupLayout.TRAILING, layout.createSequentialGroup().addContainerGap().add(jScrollPane1, GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE).addPreferredGap(LayoutStyle.UNRELATED).add(layout.createParallelGroup(GroupLayout.TRAILING).add(btnRemVdr).add(btnAddVdr)).addContainerGap()));
    }

    private class FormListener implements ActionListener {

        FormListener() {
        }

        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == btnAddVdr) {
                MediacenterVdrPanel.this.btnAddVdrActionPerformed(evt);
            } else if (evt.getSource() == btnRemVdr) {
                MediacenterVdrPanel.this.btnRemVdrActionPerformed(evt);
            }
        }
    }

    private void btnAddVdrActionPerformed(ActionEvent evt) {
        if (!tableVdrModel.contains("")) {
            int last = ConfigController.getInstance().getUMCConfig().getTv().getChannelArray().length;
            ConfigController.getInstance().getUMCConfig().getTv().insertNewChannel(last);
            tableVdrModel.addChannel(ConfigController.getInstance().getUMCConfig().getTv().getChannelArray(last));
            tableVdrModel.fireTableRowsInserted(tableVdrModel.getRowCount() - 1, tableVdrModel.getRowCount());
            tableVdr.setRowSelectionInterval(tableVdrModel.getRowCount() - 1, tableVdrModel.getRowCount() - 1);
        }
    }

    private void btnRemVdrActionPerformed(ActionEvent evt) {
        int row = tableVdr.getSelectedRow();
        if (row != -1) {
            tableVdrModel.removeChannel(row);
            ConfigController.getInstance().getUMCConfig().getTv().removeChannel(row);
            tableVdrModel.fireTableRowsDeleted(row, tableVdrModel.getRowCount());
        }
    }

    public boolean matchFilter(String tag) {
        if (tags.contains(tag)) return true;
        return false;
    }
}
