import java.awt.Toolkit;
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  Thewinator
 */
public class DebugDialog extends javax.swing.JFrame {

    /** Creates new form DebugDialog */
    public DebugDialog() {
        initComponents();
        jCheckBox1.setSelected(Debugger.keepLog);
        jCheckBox2.setSelected(Debugger.storeActions);
        jCheckBox3.setSelected(Debugger.storeExceptions);
        jCheckBox4.setSelected(Debugger.liveLogging);
        txtFolder.setText(Debugger.liveOutputFile);
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtFolder = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jCheckBox4 = new javax.swing.JCheckBox();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Debugging");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Flam3Animator50.png")));
        setLocationByPlatform(true);
        setResizable(false);
        jCheckBox1.setText("Enable completion logging");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox2.setText("Enable action logging");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox2ItemStateChanged(evt);
            }
        });
        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Enable exception logging");
        jCheckBox3.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox3ItemStateChanged(evt);
            }
        });
        jButton1.setText("Show log");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton2.setText("Show log");
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton3.setText("Show log");
        jButton3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);
        jLabel1.setText("Current log: none");
        jButton4.setText("Export logs");
        jButton4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jLabel8.setText("Log file");
        txtFolder.setEditable(false);
        jButton5.setText("Browse");
        jButton5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jCheckBox4.setText("Enable live logging (will use a lot of I/O resources)");
        jCheckBox4.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox4ItemStateChanged(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jCheckBox4).addGroup(layout.createSequentialGroup().addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(jCheckBox1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE).addComponent(jButton1)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(jCheckBox2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE).addComponent(jButton2)).addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel1).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(jCheckBox3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE).addComponent(jButton3))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton1).addComponent(jCheckBox1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton2).addComponent(jCheckBox2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton3).addComponent(jCheckBox3)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE).addComponent(jCheckBox4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel8).addComponent(jButton5).addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18, 18, 18).addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton4).addContainerGap()));
        pack();
    }

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {
        Debugger.keepLog = jCheckBox1.isSelected();
    }

    private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {
        Debugger.storeActions = jCheckBox2.isSelected();
    }

    private void jCheckBox3ItemStateChanged(java.awt.event.ItemEvent evt) {
        Debugger.storeExceptions = jCheckBox3.isSelected();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        jLabel1.setText("Current log: completion log");
        jTextArea1.setText(Debugger.getLog());
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        jLabel1.setText("Current log: action log");
        jTextArea1.setText(Debugger.getActions());
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        jLabel1.setText("Current log: exception log");
        jTextArea1.setText(Debugger.getExceptionList());
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        String fullLog = "";
        fullLog += Debugger.getLog() + "\r\n";
        fullLog += Debugger.getActions() + "\r\n";
        fullLog += Debugger.getExceptionList();
        JFileChooser pickFile = new JFileChooser();
        pickFile.setCurrentDirectory(new File(Settings.lastSavedFolder));
        pickFile.setFileFilter(new LogFilter());
        pickFile.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int retVal = pickFile.showSaveDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            File seq = pickFile.getSelectedFile();
            if (!(new SequenceFilter().accept(seq))) {
                seq = new File(seq.toString() + ".fal");
            }
            if (seq.exists()) {
                int overwrite = JOptionPane.showConfirmDialog(this, "File already exists, overwrite it?", "File exists", JOptionPane.YES_NO_OPTION);
                if (overwrite == JOptionPane.YES_OPTION) {
                    seq.delete();
                } else {
                    return;
                }
            }
            PrintWriter pw;
            try {
                pw = new PrintWriter(seq);
                pw.println(fullLog);
                pw.close();
                Settings.lastSavedFolder = pickFile.getCurrentDirectory().toString();
                Settings.saveSettings();
                Debugger.appendLog("Succesfull: saveSequence");
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Error saving to file: " + seq, "Error saving log", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "I/O Exception while saving: " + ex.getMessage(), "Error saving log", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser pickFile = new JFileChooser();
        pickFile.setCurrentDirectory(new File(txtFolder.getText()));
        pickFile.setFileFilter(new LogFilter());
        pickFile.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int retVal = pickFile.showSaveDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            File seq = pickFile.getSelectedFile();
            if (!(new LogFilter().accept(seq))) {
                seq = new File(seq.toString() + ".fal");
            }
            txtFolder.setText(seq.toString());
            Debugger.liveOutputFile = seq.toString();
        }
    }

    private void jCheckBox4ItemStateChanged(java.awt.event.ItemEvent evt) {
        Debugger.liveLogging = this.jCheckBox4.isSelected();
    }

    private javax.swing.JButton jButton1;

    private javax.swing.JButton jButton2;

    private javax.swing.JButton jButton3;

    private javax.swing.JButton jButton4;

    private javax.swing.JButton jButton5;

    private javax.swing.JCheckBox jCheckBox1;

    private javax.swing.JCheckBox jCheckBox2;

    private javax.swing.JCheckBox jCheckBox3;

    private javax.swing.JCheckBox jCheckBox4;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel8;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTextArea jTextArea1;

    private javax.swing.JTextField txtFolder;
}
