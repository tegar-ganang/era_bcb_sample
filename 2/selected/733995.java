package lv.odylab.evedb;

import org.junit.Test;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import static com.google.appengine.repackaged.com.google.common.base.X.assertTrue;
import static org.hamcrest.core.IsEqual.equalTo;
import static org.junit.Assert.assertThat;

public class ProductionTest {

    private final String baseUrl = "http://cru16.latest.odylab-evedb.appspot.com";

    @Test
    public void test_admin_clearCache() throws Exception {
        URL url = new URL(baseUrl + "/admin/clearCache");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(302));
    }

    @Test
    public void test_admin_remoteApi() throws Exception {
        URL url = new URL(baseUrl + "/remote_api");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(302));
    }

    @Test
    public void test_admin_reindex() throws Exception {
        URL url = new URL(baseUrl + "/admin/reindex");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(302));
    }

    @Test
    public void test_admin_tokenizeInvType() throws Exception {
        URL url = new URL(baseUrl + "/admin/tokenizeInvType");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(302));
    }

    @Test
    public void test_admin_calculateBlueprintDetails() throws Exception {
        URL url = new URL(baseUrl + "/admin/calculateBlueprintDetails");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(302));
    }

    @Test
    public void test_baseMaterialsForTypeID() throws Exception {
        URL url = new URL(baseUrl + "/baseMaterialsForTypeID/587");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"materialTypeID\":34,\"materialTypeName\":\"Tritanium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_14\",\"materialVolume\":\"0.01\",\"quantity\":20524},{\"materialTypeID\":35,\"materialTypeName\":\"Pyerite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_15\",\"materialVolume\":\"0.01\",\"quantity\":5529},{\"materialTypeID\":36,\"materialTypeName\":\"Mexallon\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_12\",\"materialVolume\":\"0.01\",\"quantity\":1841},{\"materialTypeID\":37,\"materialTypeName\":\"Isogen\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_16\",\"materialVolume\":\"0.01\",\"quantity\":317},{\"materialTypeID\":38,\"materialTypeName\":\"Nocxium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_09\",\"materialVolume\":\"0.01\",\"quantity\":118},{\"materialTypeID\":39,\"materialTypeName\":\"Zydrine\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_11\",\"materialVolume\":\"0.01\",\"quantity\":13},{\"materialTypeID\":40,\"materialTypeName\":\"Megacyte\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_10\",\"materialVolume\":\"0.01\",\"quantity\":1}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>34</materialTypeID><materialTypeIcon>06_14</materialTypeIcon><materialTypeName>Tritanium</materialTypeName><materialVolume>0.01</materialVolume><quantity>20524</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>35</materialTypeID><materialTypeIcon>06_15</materialTypeIcon><materialTypeName>Pyerite</materialTypeName><materialVolume>0.01</materialVolume><quantity>5529</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>36</materialTypeID><materialTypeIcon>06_12</materialTypeIcon><materialTypeName>Mexallon</materialTypeName><materialVolume>0.01</materialVolume><quantity>1841</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>37</materialTypeID><materialTypeIcon>06_16</materialTypeIcon><materialTypeName>Isogen</materialTypeName><materialVolume>0.01</materialVolume><quantity>317</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>38</materialTypeID><materialTypeIcon>11_09</materialTypeIcon><materialTypeName>Nocxium</materialTypeName><materialVolume>0.01</materialVolume><quantity>118</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>39</materialTypeID><materialTypeIcon>11_11</materialTypeIcon><materialTypeName>Zydrine</materialTypeName><materialVolume>0.01</materialVolume><quantity>13</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>40</materialTypeID><materialTypeIcon>11_10</materialTypeIcon><materialTypeName>Megacyte</materialTypeName><materialVolume>0.01</materialVolume><quantity>1</quantity></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_baseMaterialsForTypeID_NonExistingID() throws Exception {
        URL url = new URL(baseUrl + "/baseMaterialsForTypeID/1234567890");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_baseMaterialsForTypeID_StringInsteadOfID() throws Exception {
        URL url = new URL(baseUrl + "/baseMaterialsForTypeID/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_baseMaterialsForTypeName() throws Exception {
        URL url = new URL(baseUrl + "/baseMaterialsForTypeName/Rifter");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"materialTypeID\":34,\"materialTypeName\":\"Tritanium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_14\",\"materialVolume\":\"0.01\",\"quantity\":20524},{\"materialTypeID\":35,\"materialTypeName\":\"Pyerite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_15\",\"materialVolume\":\"0.01\",\"quantity\":5529},{\"materialTypeID\":36,\"materialTypeName\":\"Mexallon\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_12\",\"materialVolume\":\"0.01\",\"quantity\":1841},{\"materialTypeID\":37,\"materialTypeName\":\"Isogen\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_16\",\"materialVolume\":\"0.01\",\"quantity\":317},{\"materialTypeID\":38,\"materialTypeName\":\"Nocxium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_09\",\"materialVolume\":\"0.01\",\"quantity\":118},{\"materialTypeID\":39,\"materialTypeName\":\"Zydrine\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_11\",\"materialVolume\":\"0.01\",\"quantity\":13},{\"materialTypeID\":40,\"materialTypeName\":\"Megacyte\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_10\",\"materialVolume\":\"0.01\",\"quantity\":1}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>34</materialTypeID><materialTypeIcon>06_14</materialTypeIcon><materialTypeName>Tritanium</materialTypeName><materialVolume>0.01</materialVolume><quantity>20524</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>35</materialTypeID><materialTypeIcon>06_15</materialTypeIcon><materialTypeName>Pyerite</materialTypeName><materialVolume>0.01</materialVolume><quantity>5529</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>36</materialTypeID><materialTypeIcon>06_12</materialTypeIcon><materialTypeName>Mexallon</materialTypeName><materialVolume>0.01</materialVolume><quantity>1841</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>37</materialTypeID><materialTypeIcon>06_16</materialTypeIcon><materialTypeName>Isogen</materialTypeName><materialVolume>0.01</materialVolume><quantity>317</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>38</materialTypeID><materialTypeIcon>11_09</materialTypeIcon><materialTypeName>Nocxium</materialTypeName><materialVolume>0.01</materialVolume><quantity>118</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>39</materialTypeID><materialTypeIcon>11_11</materialTypeIcon><materialTypeName>Zydrine</materialTypeName><materialVolume>0.01</materialVolume><quantity>13</quantity></row><row xsi:type=\"invTypeMaterialDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>40</materialTypeID><materialTypeIcon>11_10</materialTypeIcon><materialTypeName>Megacyte</materialTypeName><materialVolume>0.01</materialVolume><quantity>1</quantity></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_baseMaterialsForTypeName_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/baseMaterialsForTypeName/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintTypeByTypeID() throws Exception {
        URL url = new URL(baseUrl + "/blueprintTypeByTypeID/20188");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"blueprintTypeID\":20188,\"blueprintTypeName\":\"Obelisk Blueprint\",\"productTypeID\":20187,\"productTypeName\":\"Obelisk\",\"productCategoryID\":6,\"techLevel\":1,\"productionTime\":1280000,\"researchProductivityTime\":7680000,\"researchMaterialTime\":5120000,\"researchCopyTime\":2560000,\"researchTechTime\":500000,\"productivityModifier\":256000,\"wasteFactor\":10,\"maxProductionLimit\":1,\"productVolume\":\"17550000\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><invBlueprintTypeDto><blueprintTypeID>20188</blueprintTypeID><blueprintTypeName>Obelisk Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>1</maxProductionLimit><productCategoryID>6</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>20187</productTypeID><productTypeName>Obelisk</productTypeName><productVolume>17550000</productVolume><productionTime>1280000</productionTime><productivityModifier>256000</productivityModifier><researchCopyTime>2560000</researchCopyTime><researchMaterialTime>5120000</researchMaterialTime><researchProductivityTime>7680000</researchProductivityTime><researchTechTime>500000</researchTechTime><techLevel>1</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_blueprintTypeByTypeID_NonExistingID() throws Exception {
        URL url = new URL(baseUrl + "/blueprintTypeByTypeID/1234567890");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintTypeByTypeID_StringInsteadOfID() throws Exception {
        URL url = new URL(baseUrl + "/blueprintTypeByTypeID/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintTypeByTypeName() throws Exception {
        URL url = new URL(baseUrl + "/blueprintTypeByTypeName/Obelisk+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"blueprintTypeID\":20188,\"blueprintTypeName\":\"Obelisk Blueprint\",\"productTypeID\":20187,\"productTypeName\":\"Obelisk\",\"productCategoryID\":6,\"techLevel\":1,\"productionTime\":1280000,\"researchProductivityTime\":7680000,\"researchMaterialTime\":5120000,\"researchCopyTime\":2560000,\"researchTechTime\":500000,\"productivityModifier\":256000,\"wasteFactor\":10,\"maxProductionLimit\":1,\"productVolume\":\"17550000\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><invBlueprintTypeDto><blueprintTypeID>20188</blueprintTypeID><blueprintTypeName>Obelisk Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>1</maxProductionLimit><productCategoryID>6</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>20187</productTypeID><productTypeName>Obelisk</productTypeName><productVolume>17550000</productVolume><productionTime>1280000</productionTime><productivityModifier>256000</productivityModifier><researchCopyTime>2560000</researchCopyTime><researchMaterialTime>5120000</researchMaterialTime><researchProductivityTime>7680000</researchProductivityTime><researchTechTime>500000</researchTechTime><techLevel>1</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
        url = new URL(baseUrl + "/blueprintTypeByTypeName/Obelisk%20Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"blueprintTypeID\":20188,\"blueprintTypeName\":\"Obelisk Blueprint\",\"productTypeID\":20187,\"productTypeName\":\"Obelisk\",\"productCategoryID\":6,\"techLevel\":1,\"productionTime\":1280000,\"researchProductivityTime\":7680000,\"researchMaterialTime\":5120000,\"researchCopyTime\":2560000,\"researchTechTime\":500000,\"productivityModifier\":256000,\"wasteFactor\":10,\"maxProductionLimit\":1,\"productVolume\":\"17550000\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><invBlueprintTypeDto><blueprintTypeID>20188</blueprintTypeID><blueprintTypeName>Obelisk Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>1</maxProductionLimit><productCategoryID>6</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>20187</productTypeID><productTypeName>Obelisk</productTypeName><productVolume>17550000</productVolume><productionTime>1280000</productionTime><productivityModifier>256000</productivityModifier><researchCopyTime>2560000</researchCopyTime><researchMaterialTime>5120000</researchMaterialTime><researchProductivityTime>7680000</researchProductivityTime><researchTechTime>500000</researchTechTime><techLevel>1</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
        url = new URL(baseUrl + "/blueprintTypeByTypeName/Obelisk Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintTypeByTypeName_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/blueprintTypeByTypeName/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintDetailsForTypeID() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeID/28849");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":28849,\"blueprintTypeName\":\"Anshar Blueprint\",\"productTypeID\":28848,\"productTypeName\":\"Anshar\",\"productCategoryID\":6,\"parentBlueprintTypeID\":20188,\"parentBlueprintTypeName\":\"Obelisk Blueprint\",\"parentProductTypeID\":20187,\"parentProductTypeName\":\"Obelisk\",\"techLevel\":2,\"productionTime\":1920000,\"researchProductivityTime\":11520000,\"researchMaterialTime\":7680000,\"researchCopyTime\":2560000,\"researchTechTime\":3840000,\"productivityModifier\":384000,\"wasteFactor\":10,\"maxProductionLimit\":10,\"productVolume\":\"17550000\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[{\"materialTypeID\":3828,\"materialTypeName\":\"Construction Blocks\",\"materialTypeCategoryID\":43,\"materialTypeIcon\":\"06_05\",\"materialVolume\":\"1.5\",\"quantity\":1500},{\"materialTypeID\":11399,\"materialTypeName\":\"Morphite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"35_02\",\"materialVolume\":\"0.01\",\"quantity\":2500},{\"materialTypeID\":21025,\"materialTypeName\":\"Capital Jump Drive\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"54_08\",\"materialVolume\":\"10000.0\",\"quantity\":20},{\"materialTypeID\":29041,\"materialTypeName\":\"Capital Crystalline Carbonide Armor Plate\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_14\",\"materialVolume\":\"10.0\",\"quantity\":1013},{\"materialTypeID\":29051,\"materialTypeName\":\"Capital Fusion Reactor Unit\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_02\",\"materialVolume\":\"10.0\",\"quantity\":518},{\"materialTypeID\":29061,\"materialTypeName\":\"Capital Ion Thruster\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_02\",\"materialVolume\":\"10.0\",\"quantity\":422},{\"materialTypeID\":29069,\"materialTypeName\":\"Capital Magnetometric Sensor Cluster\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_06\",\"materialVolume\":\"10.0\",\"quantity\":443},{\"materialTypeID\":29081,\"materialTypeName\":\"Capital Oscillator Capacitor Unit\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_06\",\"materialVolume\":\"10.0\",\"quantity\":704},{\"materialTypeID\":29085,\"materialTypeName\":\"Capital Photon Microprocessor\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_10\",\"materialVolume\":\"10.0\",\"quantity\":704},{\"materialTypeID\":29091,\"materialTypeName\":\"Capital Pulse Shield Emitter\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_10\",\"materialVolume\":\"10.0\",\"quantity\":449}],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11478,\"requiredTypeName\":\"R.A.M.- Starship Tech\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_02\",\"damagePerJob\":\"0.95\",\"quantity\":40,\"requiredTypeVolume\":\"4.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":20187,\"requiredTypeName\":\"Obelisk\",\"requiredTypeCategoryID\":6,\"requiredTypeGroupID\":513,\"requiredTypeGroupName\":\"Freighter\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"17550000\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":22242,\"requiredTypeName\":\"Capital Ship Construction\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":269,\"requiredTypeGroupName\":\"Mechanic\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"}],\"timeProductivityRequirementDtos\":[{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3403,\"requiredTypeName\":\"Research\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":120,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":100,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.8\",\"quantity\":30,\"requiredTypeVolume\":\"4.0\"}],\"materialProductivityRequirementDtos\":[{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3409,\"requiredTypeName\":\"Metallurgy\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":140,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":100,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.6\",\"quantity\":30,\"requiredTypeVolume\":\"4.0\"}],\"copyingRequirementDtos\":[{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":3812,\"requiredTypeName\":\"Data Sheets\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":600,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.95\",\"quantity\":40,\"requiredTypeVolume\":\"4.0\"}],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><blueprintDetailsDto><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>1.0</damagePerJob><quantity>600</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3812</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Data Sheets</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.95</damagePerJob><quantity>40</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></copyingRequirementDtos><invBlueprintTypeDto><blueprintTypeID>28849</blueprintTypeID><blueprintTypeName>Anshar Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>10</maxProductionLimit><parentBlueprintTypeID>20188</parentBlueprintTypeID><parentBlueprintTypeName>Obelisk Blueprint</parentBlueprintTypeName><parentProductTypeID>20187</parentProductTypeID><parentProductTypeName>Obelisk</parentProductTypeName><productCategoryID>6</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>28848</productTypeID><productTypeName>Anshar</productTypeName><productVolume>17550000</productVolume><productionTime>1920000</productionTime><productivityModifier>384000</productivityModifier><researchCopyTime>2560000</researchCopyTime><researchMaterialTime>7680000</researchMaterialTime><researchProductivityTime>11520000</researchProductivityTime><researchTechTime>3840000</researchTechTime><techLevel>2</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>268</requiredTypeGroupID><requiredTypeGroupName>Industry</requiredTypeGroupName><requiredTypeID>3380</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Industry</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.95</damagePerJob><quantity>40</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11478</requiredTypeID><requiredTypeIcon>41_02</requiredTypeIcon><requiredTypeName>R.A.M.- Starship Tech</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>6</requiredTypeCategoryID><requiredTypeGroupID>513</requiredTypeGroupID><requiredTypeGroupName>Freighter</requiredTypeGroupName><requiredTypeID>20187</requiredTypeID><requiredTypeName>Obelisk</requiredTypeName><requiredTypeVolume>17550000</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>269</requiredTypeGroupID><requiredTypeGroupName>Mechanic</requiredTypeGroupName><requiredTypeID>22242</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Capital Ship Construction</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><materialDtos><materialTypeCategoryID>43</materialTypeCategoryID><materialTypeID>3828</materialTypeID><materialTypeIcon>06_05</materialTypeIcon><materialTypeName>Construction Blocks</materialTypeName><materialVolume>1.5</materialVolume><quantity>1500</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>11399</materialTypeID><materialTypeIcon>35_02</materialTypeIcon><materialTypeName>Morphite</materialTypeName><materialVolume>0.01</materialVolume><quantity>2500</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>21025</materialTypeID><materialTypeIcon>54_08</materialTypeIcon><materialTypeName>Capital Jump Drive</materialTypeName><materialVolume>10000.0</materialVolume><quantity>20</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29041</materialTypeID><materialTypeIcon>37_14</materialTypeIcon><materialTypeName>Capital Crystalline Carbonide Armor Plate</materialTypeName><materialVolume>10.0</materialVolume><quantity>1013</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29051</materialTypeID><materialTypeIcon>39_02</materialTypeIcon><materialTypeName>Capital Fusion Reactor Unit</materialTypeName><materialVolume>10.0</materialVolume><quantity>518</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29061</materialTypeID><materialTypeIcon>37_02</materialTypeIcon><materialTypeName>Capital Ion Thruster</materialTypeName><materialVolume>10.0</materialVolume><quantity>422</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29069</materialTypeID><materialTypeIcon>37_06</materialTypeIcon><materialTypeName>Capital Magnetometric Sensor Cluster</materialTypeName><materialVolume>10.0</materialVolume><quantity>443</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29081</materialTypeID><materialTypeIcon>39_06</materialTypeIcon><materialTypeName>Capital Oscillator Capacitor Unit</materialTypeName><materialVolume>10.0</materialVolume><quantity>704</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29085</materialTypeID><materialTypeIcon>37_10</materialTypeIcon><materialTypeName>Capital Photon Microprocessor</materialTypeName><materialVolume>10.0</materialVolume><quantity>704</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29091</materialTypeID><materialTypeIcon>39_10</materialTypeIcon><materialTypeName>Capital Pulse Shield Emitter</materialTypeName><materialVolume>10.0</materialVolume><quantity>449</quantity></materialDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>3409</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Metallurgy</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>140</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>100</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.6</damagePerJob><quantity>30</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></materialProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>3403</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Research</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>120</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>100</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.8</damagePerJob><quantity>30</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></timeProductivityRequirementDtos></blueprintDetailsDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_blueprintDetailsForTypeID_NonExistingID() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeID/1234567890");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintDetailsForTypeID_StringInsteadOfID() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeID/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintDetailsForTypeName() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeName/Anshar+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":28849,\"blueprintTypeName\":\"Anshar Blueprint\",\"productTypeID\":28848,\"productTypeName\":\"Anshar\",\"productCategoryID\":6,\"parentBlueprintTypeID\":20188,\"parentBlueprintTypeName\":\"Obelisk Blueprint\",\"parentProductTypeID\":20187,\"parentProductTypeName\":\"Obelisk\",\"techLevel\":2,\"productionTime\":1920000,\"researchProductivityTime\":11520000,\"researchMaterialTime\":7680000,\"researchCopyTime\":2560000,\"researchTechTime\":3840000,\"productivityModifier\":384000,\"wasteFactor\":10,\"maxProductionLimit\":10,\"productVolume\":\"17550000\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[{\"materialTypeID\":3828,\"materialTypeName\":\"Construction Blocks\",\"materialTypeCategoryID\":43,\"materialTypeIcon\":\"06_05\",\"materialVolume\":\"1.5\",\"quantity\":1500},{\"materialTypeID\":11399,\"materialTypeName\":\"Morphite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"35_02\",\"materialVolume\":\"0.01\",\"quantity\":2500},{\"materialTypeID\":21025,\"materialTypeName\":\"Capital Jump Drive\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"54_08\",\"materialVolume\":\"10000.0\",\"quantity\":20},{\"materialTypeID\":29041,\"materialTypeName\":\"Capital Crystalline Carbonide Armor Plate\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_14\",\"materialVolume\":\"10.0\",\"quantity\":1013},{\"materialTypeID\":29051,\"materialTypeName\":\"Capital Fusion Reactor Unit\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_02\",\"materialVolume\":\"10.0\",\"quantity\":518},{\"materialTypeID\":29061,\"materialTypeName\":\"Capital Ion Thruster\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_02\",\"materialVolume\":\"10.0\",\"quantity\":422},{\"materialTypeID\":29069,\"materialTypeName\":\"Capital Magnetometric Sensor Cluster\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_06\",\"materialVolume\":\"10.0\",\"quantity\":443},{\"materialTypeID\":29081,\"materialTypeName\":\"Capital Oscillator Capacitor Unit\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_06\",\"materialVolume\":\"10.0\",\"quantity\":704},{\"materialTypeID\":29085,\"materialTypeName\":\"Capital Photon Microprocessor\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_10\",\"materialVolume\":\"10.0\",\"quantity\":704},{\"materialTypeID\":29091,\"materialTypeName\":\"Capital Pulse Shield Emitter\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_10\",\"materialVolume\":\"10.0\",\"quantity\":449}],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11478,\"requiredTypeName\":\"R.A.M.- Starship Tech\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_02\",\"damagePerJob\":\"0.95\",\"quantity\":40,\"requiredTypeVolume\":\"4.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":20187,\"requiredTypeName\":\"Obelisk\",\"requiredTypeCategoryID\":6,\"requiredTypeGroupID\":513,\"requiredTypeGroupName\":\"Freighter\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"17550000\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":22242,\"requiredTypeName\":\"Capital Ship Construction\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":269,\"requiredTypeGroupName\":\"Mechanic\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"}],\"timeProductivityRequirementDtos\":[{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3403,\"requiredTypeName\":\"Research\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":120,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":100,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.8\",\"quantity\":30,\"requiredTypeVolume\":\"4.0\"}],\"materialProductivityRequirementDtos\":[{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3409,\"requiredTypeName\":\"Metallurgy\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":140,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":100,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.6\",\"quantity\":30,\"requiredTypeVolume\":\"4.0\"}],\"copyingRequirementDtos\":[{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":3812,\"requiredTypeName\":\"Data Sheets\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":600,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.95\",\"quantity\":40,\"requiredTypeVolume\":\"4.0\"}],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><blueprintDetailsDto><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>1.0</damagePerJob><quantity>600</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3812</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Data Sheets</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.95</damagePerJob><quantity>40</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></copyingRequirementDtos><invBlueprintTypeDto><blueprintTypeID>28849</blueprintTypeID><blueprintTypeName>Anshar Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>10</maxProductionLimit><parentBlueprintTypeID>20188</parentBlueprintTypeID><parentBlueprintTypeName>Obelisk Blueprint</parentBlueprintTypeName><parentProductTypeID>20187</parentProductTypeID><parentProductTypeName>Obelisk</parentProductTypeName><productCategoryID>6</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>28848</productTypeID><productTypeName>Anshar</productTypeName><productVolume>17550000</productVolume><productionTime>1920000</productionTime><productivityModifier>384000</productivityModifier><researchCopyTime>2560000</researchCopyTime><researchMaterialTime>7680000</researchMaterialTime><researchProductivityTime>11520000</researchProductivityTime><researchTechTime>3840000</researchTechTime><techLevel>2</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>268</requiredTypeGroupID><requiredTypeGroupName>Industry</requiredTypeGroupName><requiredTypeID>3380</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Industry</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.95</damagePerJob><quantity>40</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11478</requiredTypeID><requiredTypeIcon>41_02</requiredTypeIcon><requiredTypeName>R.A.M.- Starship Tech</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>6</requiredTypeCategoryID><requiredTypeGroupID>513</requiredTypeGroupID><requiredTypeGroupName>Freighter</requiredTypeGroupName><requiredTypeID>20187</requiredTypeID><requiredTypeName>Obelisk</requiredTypeName><requiredTypeVolume>17550000</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>269</requiredTypeGroupID><requiredTypeGroupName>Mechanic</requiredTypeGroupName><requiredTypeID>22242</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Capital Ship Construction</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><materialDtos><materialTypeCategoryID>43</materialTypeCategoryID><materialTypeID>3828</materialTypeID><materialTypeIcon>06_05</materialTypeIcon><materialTypeName>Construction Blocks</materialTypeName><materialVolume>1.5</materialVolume><quantity>1500</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>11399</materialTypeID><materialTypeIcon>35_02</materialTypeIcon><materialTypeName>Morphite</materialTypeName><materialVolume>0.01</materialVolume><quantity>2500</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>21025</materialTypeID><materialTypeIcon>54_08</materialTypeIcon><materialTypeName>Capital Jump Drive</materialTypeName><materialVolume>10000.0</materialVolume><quantity>20</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29041</materialTypeID><materialTypeIcon>37_14</materialTypeIcon><materialTypeName>Capital Crystalline Carbonide Armor Plate</materialTypeName><materialVolume>10.0</materialVolume><quantity>1013</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29051</materialTypeID><materialTypeIcon>39_02</materialTypeIcon><materialTypeName>Capital Fusion Reactor Unit</materialTypeName><materialVolume>10.0</materialVolume><quantity>518</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29061</materialTypeID><materialTypeIcon>37_02</materialTypeIcon><materialTypeName>Capital Ion Thruster</materialTypeName><materialVolume>10.0</materialVolume><quantity>422</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29069</materialTypeID><materialTypeIcon>37_06</materialTypeIcon><materialTypeName>Capital Magnetometric Sensor Cluster</materialTypeName><materialVolume>10.0</materialVolume><quantity>443</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29081</materialTypeID><materialTypeIcon>39_06</materialTypeIcon><materialTypeName>Capital Oscillator Capacitor Unit</materialTypeName><materialVolume>10.0</materialVolume><quantity>704</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29085</materialTypeID><materialTypeIcon>37_10</materialTypeIcon><materialTypeName>Capital Photon Microprocessor</materialTypeName><materialVolume>10.0</materialVolume><quantity>704</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29091</materialTypeID><materialTypeIcon>39_10</materialTypeIcon><materialTypeName>Capital Pulse Shield Emitter</materialTypeName><materialVolume>10.0</materialVolume><quantity>449</quantity></materialDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>3409</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Metallurgy</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>140</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>100</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.6</damagePerJob><quantity>30</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></materialProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>3403</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Research</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>120</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>100</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.8</damagePerJob><quantity>30</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></timeProductivityRequirementDtos></blueprintDetailsDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
        url = new URL(baseUrl + "/blueprintDetailsForTypeName/Anshar%20Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":28849,\"blueprintTypeName\":\"Anshar Blueprint\",\"productTypeID\":28848,\"productTypeName\":\"Anshar\",\"productCategoryID\":6,\"parentBlueprintTypeID\":20188,\"parentBlueprintTypeName\":\"Obelisk Blueprint\",\"parentProductTypeID\":20187,\"parentProductTypeName\":\"Obelisk\",\"techLevel\":2,\"productionTime\":1920000,\"researchProductivityTime\":11520000,\"researchMaterialTime\":7680000,\"researchCopyTime\":2560000,\"researchTechTime\":3840000,\"productivityModifier\":384000,\"wasteFactor\":10,\"maxProductionLimit\":10,\"productVolume\":\"17550000\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[{\"materialTypeID\":3828,\"materialTypeName\":\"Construction Blocks\",\"materialTypeCategoryID\":43,\"materialTypeIcon\":\"06_05\",\"materialVolume\":\"1.5\",\"quantity\":1500},{\"materialTypeID\":11399,\"materialTypeName\":\"Morphite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"35_02\",\"materialVolume\":\"0.01\",\"quantity\":2500},{\"materialTypeID\":21025,\"materialTypeName\":\"Capital Jump Drive\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"54_08\",\"materialVolume\":\"10000.0\",\"quantity\":20},{\"materialTypeID\":29041,\"materialTypeName\":\"Capital Crystalline Carbonide Armor Plate\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_14\",\"materialVolume\":\"10.0\",\"quantity\":1013},{\"materialTypeID\":29051,\"materialTypeName\":\"Capital Fusion Reactor Unit\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_02\",\"materialVolume\":\"10.0\",\"quantity\":518},{\"materialTypeID\":29061,\"materialTypeName\":\"Capital Ion Thruster\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_02\",\"materialVolume\":\"10.0\",\"quantity\":422},{\"materialTypeID\":29069,\"materialTypeName\":\"Capital Magnetometric Sensor Cluster\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_06\",\"materialVolume\":\"10.0\",\"quantity\":443},{\"materialTypeID\":29081,\"materialTypeName\":\"Capital Oscillator Capacitor Unit\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_06\",\"materialVolume\":\"10.0\",\"quantity\":704},{\"materialTypeID\":29085,\"materialTypeName\":\"Capital Photon Microprocessor\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"37_10\",\"materialVolume\":\"10.0\",\"quantity\":704},{\"materialTypeID\":29091,\"materialTypeName\":\"Capital Pulse Shield Emitter\",\"materialTypeCategoryID\":17,\"materialTypeIcon\":\"39_10\",\"materialVolume\":\"10.0\",\"quantity\":449}],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11478,\"requiredTypeName\":\"R.A.M.- Starship Tech\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_02\",\"damagePerJob\":\"0.95\",\"quantity\":40,\"requiredTypeVolume\":\"4.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":20187,\"requiredTypeName\":\"Obelisk\",\"requiredTypeCategoryID\":6,\"requiredTypeGroupID\":513,\"requiredTypeGroupName\":\"Freighter\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"17550000\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":22242,\"requiredTypeName\":\"Capital Ship Construction\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":269,\"requiredTypeGroupName\":\"Mechanic\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"}],\"timeProductivityRequirementDtos\":[{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3403,\"requiredTypeName\":\"Research\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":120,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":100,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.8\",\"quantity\":30,\"requiredTypeVolume\":\"4.0\"}],\"materialProductivityRequirementDtos\":[{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3409,\"requiredTypeName\":\"Metallurgy\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":140,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":100,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.6\",\"quantity\":30,\"requiredTypeVolume\":\"4.0\"}],\"copyingRequirementDtos\":[{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":3812,\"requiredTypeName\":\"Data Sheets\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":600,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11450,\"requiredTypeName\":\"Gallentean Starship Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11452,\"requiredTypeName\":\"Mechanical Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11466,\"requiredTypeName\":\"R.Db - CreoDron\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":332,\"requiredTypeGroupName\":\"Tool\",\"requiredTypeIcon\":\"41_01\",\"damagePerJob\":\"0.95\",\"quantity\":40,\"requiredTypeVolume\":\"4.0\"}],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><blueprintDetailsDto><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>1.0</damagePerJob><quantity>600</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3812</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Data Sheets</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.95</damagePerJob><quantity>40</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></copyingRequirementDtos><invBlueprintTypeDto><blueprintTypeID>28849</blueprintTypeID><blueprintTypeName>Anshar Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>10</maxProductionLimit><parentBlueprintTypeID>20188</parentBlueprintTypeID><parentBlueprintTypeName>Obelisk Blueprint</parentBlueprintTypeName><parentProductTypeID>20187</parentProductTypeID><parentProductTypeName>Obelisk</parentProductTypeName><productCategoryID>6</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>28848</productTypeID><productTypeName>Anshar</productTypeName><productVolume>17550000</productVolume><productionTime>1920000</productionTime><productivityModifier>384000</productivityModifier><researchCopyTime>2560000</researchCopyTime><researchMaterialTime>7680000</researchMaterialTime><researchProductivityTime>11520000</researchProductivityTime><researchTechTime>3840000</researchTechTime><techLevel>2</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>268</requiredTypeGroupID><requiredTypeGroupName>Industry</requiredTypeGroupName><requiredTypeID>3380</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Industry</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.95</damagePerJob><quantity>40</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11478</requiredTypeID><requiredTypeIcon>41_02</requiredTypeIcon><requiredTypeName>R.A.M.- Starship Tech</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>6</requiredTypeCategoryID><requiredTypeGroupID>513</requiredTypeGroupID><requiredTypeGroupName>Freighter</requiredTypeGroupName><requiredTypeID>20187</requiredTypeID><requiredTypeName>Obelisk</requiredTypeName><requiredTypeVolume>17550000</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>269</requiredTypeGroupID><requiredTypeGroupName>Mechanic</requiredTypeGroupName><requiredTypeID>22242</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Capital Ship Construction</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><materialDtos><materialTypeCategoryID>43</materialTypeCategoryID><materialTypeID>3828</materialTypeID><materialTypeIcon>06_05</materialTypeIcon><materialTypeName>Construction Blocks</materialTypeName><materialVolume>1.5</materialVolume><quantity>1500</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>11399</materialTypeID><materialTypeIcon>35_02</materialTypeIcon><materialTypeName>Morphite</materialTypeName><materialVolume>0.01</materialVolume><quantity>2500</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>21025</materialTypeID><materialTypeIcon>54_08</materialTypeIcon><materialTypeName>Capital Jump Drive</materialTypeName><materialVolume>10000.0</materialVolume><quantity>20</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29041</materialTypeID><materialTypeIcon>37_14</materialTypeIcon><materialTypeName>Capital Crystalline Carbonide Armor Plate</materialTypeName><materialVolume>10.0</materialVolume><quantity>1013</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29051</materialTypeID><materialTypeIcon>39_02</materialTypeIcon><materialTypeName>Capital Fusion Reactor Unit</materialTypeName><materialVolume>10.0</materialVolume><quantity>518</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29061</materialTypeID><materialTypeIcon>37_02</materialTypeIcon><materialTypeName>Capital Ion Thruster</materialTypeName><materialVolume>10.0</materialVolume><quantity>422</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29069</materialTypeID><materialTypeIcon>37_06</materialTypeIcon><materialTypeName>Capital Magnetometric Sensor Cluster</materialTypeName><materialVolume>10.0</materialVolume><quantity>443</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29081</materialTypeID><materialTypeIcon>39_06</materialTypeIcon><materialTypeName>Capital Oscillator Capacitor Unit</materialTypeName><materialVolume>10.0</materialVolume><quantity>704</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29085</materialTypeID><materialTypeIcon>37_10</materialTypeIcon><materialTypeName>Capital Photon Microprocessor</materialTypeName><materialVolume>10.0</materialVolume><quantity>704</quantity></materialDtos><materialDtos><materialTypeCategoryID>17</materialTypeCategoryID><materialTypeID>29091</materialTypeID><materialTypeIcon>39_10</materialTypeIcon><materialTypeName>Capital Pulse Shield Emitter</materialTypeName><materialVolume>10.0</materialVolume><quantity>449</quantity></materialDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>3409</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Metallurgy</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>140</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>100</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.6</damagePerJob><quantity>30</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></materialProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>3403</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Research</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>120</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>100</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11450</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11452</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Mechanical Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.8</damagePerJob><quantity>30</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>332</requiredTypeGroupID><requiredTypeGroupName>Tool</requiredTypeGroupName><requiredTypeID>11466</requiredTypeID><requiredTypeIcon>41_01</requiredTypeIcon><requiredTypeName>R.Db - CreoDron</requiredTypeName><requiredTypeVolume>4.0</requiredTypeVolume></timeProductivityRequirementDtos></blueprintDetailsDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
        url = new URL(baseUrl + "/blueprintDetailsForTypeName/Anshar Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_blueprintDetails_Issue15_HTTP400() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeName/Sovereignty+Blockade+Unit+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":2738,\"blueprintTypeName\":\"Sovereignty Blockade Unit Blueprint\",\"productTypeID\":32250,\"productTypeName\":\"Sovereignty Blockade Unit\",\"productCategoryID\":40,\"techLevel\":1,\"productionTime\":43200,\"researchProductivityTime\":864000,\"researchMaterialTime\":864000,\"researchCopyTime\":864000,\"researchTechTime\":864000,\"productivityModifier\":8640,\"wasteFactor\":10,\"maxProductionLimit\":5,\"productVolume\":\"2500.0\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2867,\"requiredTypeName\":\"Broadcast Node\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_06\",\"damagePerJob\":\"1.0\",\"quantity\":13,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2868,\"requiredTypeName\":\"Integrity Response Drones\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_02\",\"damagePerJob\":\"1.0\",\"quantity\":9,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2869,\"requiredTypeName\":\"Nano-Factory\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_05\",\"damagePerJob\":\"1.0\",\"quantity\":19,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2870,\"requiredTypeName\":\"Organic Mortar Applicators\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_03\",\"damagePerJob\":\"1.0\",\"quantity\":19,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2871,\"requiredTypeName\":\"Recursive Computing Module\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_07\",\"damagePerJob\":\"1.0\",\"quantity\":13,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2872,\"requiredTypeName\":\"Self-Harmonizing Power Core\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_01\",\"damagePerJob\":\"1.0\",\"quantity\":13,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2875,\"requiredTypeName\":\"Sterile Conduits\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_04\",\"damagePerJob\":\"1.0\",\"quantity\":19,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":2876,\"requiredTypeName\":\"Wetware Mainframe\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1041,\"requiredTypeGroupName\":\"Advanced Commodities\",\"requiredTypeIcon\":\"99_08\",\"damagePerJob\":\"1.0\",\"quantity\":9,\"requiredTypeVolume\":\"100.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":5,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":21037,\"requiredTypeName\":\"Capital Construction Parts\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":873,\"requiredTypeGroupName\":\"Capital Construction Components\",\"requiredTypeIcon\":\"54_12\",\"damagePerJob\":\"1.0\",\"quantity\":5,\"requiredTypeVolume\":\"10000.0\"}],\"timeProductivityRequirementDtos\":[],\"materialProductivityRequirementDtos\":[],\"copyingRequirementDtos\":[],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><blueprintDetailsDto><invBlueprintTypeDto><blueprintTypeID>2738</blueprintTypeID><blueprintTypeName>Sovereignty Blockade Unit Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>5</maxProductionLimit><productCategoryID>40</productCategoryID><productPortionSize>1</productPortionSize><productTypeID>32250</productTypeID><productTypeName>Sovereignty Blockade Unit</productTypeName><productVolume>2500.0</productVolume><productionTime>43200</productionTime><productivityModifier>8640</productivityModifier><researchCopyTime>864000</researchCopyTime><researchMaterialTime>864000</researchMaterialTime><researchProductivityTime>864000</researchProductivityTime><researchTechTime>864000</researchTechTime><techLevel>1</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>13</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2867</requiredTypeID><requiredTypeIcon>99_06</requiredTypeIcon><requiredTypeName>Broadcast Node</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>9</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2868</requiredTypeID><requiredTypeIcon>99_02</requiredTypeIcon><requiredTypeName>Integrity Response Drones</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>19</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2869</requiredTypeID><requiredTypeIcon>99_05</requiredTypeIcon><requiredTypeName>Nano-Factory</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>19</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2870</requiredTypeID><requiredTypeIcon>99_03</requiredTypeIcon><requiredTypeName>Organic Mortar Applicators</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>13</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2871</requiredTypeID><requiredTypeIcon>99_07</requiredTypeIcon><requiredTypeName>Recursive Computing Module</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>13</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2872</requiredTypeID><requiredTypeIcon>99_01</requiredTypeIcon><requiredTypeName>Self-Harmonizing Power Core</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>19</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2875</requiredTypeID><requiredTypeIcon>99_04</requiredTypeIcon><requiredTypeName>Sterile Conduits</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>9</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1041</requiredTypeGroupID><requiredTypeGroupName>Advanced Commodities</requiredTypeGroupName><requiredTypeID>2876</requiredTypeID><requiredTypeIcon>99_08</requiredTypeIcon><requiredTypeName>Wetware Mainframe</requiredTypeName><requiredTypeVolume>100.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>268</requiredTypeGroupID><requiredTypeGroupName>Industry</requiredTypeGroupName><requiredTypeID>3380</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Industry</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>5</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>873</requiredTypeGroupID><requiredTypeGroupName>Capital Construction Components</requiredTypeGroupName><requiredTypeID>21037</requiredTypeID><requiredTypeIcon>54_12</requiredTypeIcon><requiredTypeName>Capital Construction Parts</requiredTypeName><requiredTypeVolume>10000.0</requiredTypeVolume></manufacturingRequirementDtos></blueprintDetailsDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_blueprintDetails_Issue22_WrongTritOnMobileDisruptor() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeName/Mobile+Large+Warp+Disruptor+I+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":12301,\"blueprintTypeName\":\"Mobile Large Warp Disruptor I Blueprint\",\"productTypeID\":12200,\"productTypeName\":\"Mobile Large Warp Disruptor I\",\"productCategoryID\":22,\"productIcon\":\"36_15\",\"techLevel\":1,\"productionTime\":40000,\"researchProductivityTime\":480000,\"researchMaterialTime\":360000,\"researchCopyTime\":400000,\"researchTechTime\":36000,\"productivityModifier\":8000,\"wasteFactor\":10,\"maxProductionLimit\":10,\"productVolume\":\"585.0\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[{\"materialTypeID\":34,\"materialTypeName\":\"Tritanium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_14\",\"materialVolume\":\"0.01\",\"quantity\":247900},{\"materialTypeID\":35,\"materialTypeName\":\"Pyerite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_15\",\"materialVolume\":\"0.01\",\"quantity\":81325},{\"materialTypeID\":36,\"materialTypeName\":\"Mexallon\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_12\",\"materialVolume\":\"0.01\",\"quantity\":43931},{\"materialTypeID\":37,\"materialTypeName\":\"Isogen\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_16\",\"materialVolume\":\"0.01\",\"quantity\":10663},{\"materialTypeID\":38,\"materialTypeName\":\"Nocxium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_09\",\"materialVolume\":\"0.01\",\"quantity\":2832},{\"materialTypeID\":39,\"materialTypeName\":\"Zydrine\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_11\",\"materialVolume\":\"0.01\",\"quantity\":1262},{\"materialTypeID\":40,\"materialTypeName\":\"Megacyte\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_10\",\"materialVolume\":\"0.01\",\"quantity\":320}],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":447,\"requiredTypeName\":\"Warp Scrambler I\",\"requiredTypeCategoryID\":7,\"requiredTypeGroupID\":52,\"requiredTypeGroupName\":\"Warp Scrambler\",\"requiredTypeIcon\":\"76_01\",\"damagePerJob\":\"1.0\",\"quantity\":9,\"requiredTypeVolume\":\"5.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":1,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3687,\"requiredTypeName\":\"Electronic Parts\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_09\",\"damagePerJob\":\"1.0\",\"quantity\":20,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11446,\"requiredTypeName\":\"Graviton Physics\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":3,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":11453,\"requiredTypeName\":\"Electronic Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":3,\"requiredTypeVolume\":\"0.01\"}],\"timeProductivityRequirementDtos\":[{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":7,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":6,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11446,\"requiredTypeName\":\"Graviton Physics\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":3,\"activityName\":\"Researching Time Productivity\",\"requiredTypeID\":11453,\"requiredTypeName\":\"Electronic Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"}],\"materialProductivityRequirementDtos\":[{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":3814,\"requiredTypeName\":\"Reports\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":8,\"requiredTypeVolume\":\"0.1\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":9836,\"requiredTypeName\":\"Consumer Electronics\",\"requiredTypeCategoryID\":43,\"requiredTypeGroupID\":1034,\"requiredTypeGroupName\":\"Refined Commodities\",\"requiredTypeIcon\":\"24_08\",\"damagePerJob\":\"1.0\",\"quantity\":4,\"requiredTypeVolume\":\"1.5\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11446,\"requiredTypeName\":\"Graviton Physics\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":3,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":4,\"activityName\":\"Researching Material Productivity\",\"requiredTypeID\":11453,\"requiredTypeName\":\"Electronic Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":3,\"requiredTypeVolume\":\"0.01\"}],\"copyingRequirementDtos\":[{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":3812,\"requiredTypeName\":\"Data Sheets\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":280,\"requiredTypeGroupName\":\"General\",\"requiredTypeIcon\":\"10_16\",\"damagePerJob\":\"1.0\",\"quantity\":15,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11446,\"requiredTypeName\":\"Graviton Physics\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":5,\"activityName\":\"Copying\",\"requiredTypeID\":11453,\"requiredTypeName\":\"Electronic Engineering\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":270,\"requiredTypeGroupName\":\"Science\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":4,\"requiredTypeVolume\":\"0.01\"}],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20418,\"requiredTypeName\":\"Datacore - Electronic Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_03\",\"damagePerJob\":\"1.0\",\"quantity\":9,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20419,\"requiredTypeName\":\"Datacore - Graviton Physics\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_01\",\"damagePerJob\":\"1.0\",\"quantity\":9,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":25553,\"requiredTypeName\":\"Cryptic Data Interface\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":716,\"requiredTypeGroupName\":\"Data Interfaces\",\"requiredTypeIcon\":\"63_03\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"1.0\"}]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><blueprintDetailsDto><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>1.0</damagePerJob><quantity>15</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3812</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Data Sheets</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11446</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Graviton Physics</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><copyingRequirementDtos><activityID>5</activityID><activityName>Copying</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11453</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Electronic Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></copyingRequirementDtos><invBlueprintTypeDto><blueprintTypeID>12301</blueprintTypeID><blueprintTypeName>Mobile Large Warp Disruptor I Blueprint</blueprintTypeName><dumpVersion>cru16</dumpVersion><maxProductionLimit>10</maxProductionLimit><productCategoryID>22</productCategoryID><productIcon>36_15</productIcon><productPortionSize>1</productPortionSize><productTypeID>12200</productTypeID><productTypeName>Mobile Large Warp Disruptor I</productTypeName><productVolume>585.0</productVolume><productionTime>40000</productionTime><productivityModifier>8000</productivityModifier><researchCopyTime>400000</researchCopyTime><researchMaterialTime>360000</researchMaterialTime><researchProductivityTime>480000</researchProductivityTime><researchTechTime>36000</researchTechTime><techLevel>1</techLevel><wasteFactor>10</wasteFactor></invBlueprintTypeDto><inventionRequirementDtos><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>9</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20418</requiredTypeID><requiredTypeIcon>64_03</requiredTypeIcon><requiredTypeName>Datacore - Electronic Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></inventionRequirementDtos><inventionRequirementDtos><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>9</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20419</requiredTypeID><requiredTypeIcon>64_01</requiredTypeIcon><requiredTypeName>Datacore - Graviton Physics</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></inventionRequirementDtos><inventionRequirementDtos><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>716</requiredTypeGroupID><requiredTypeGroupName>Data Interfaces</requiredTypeGroupName><requiredTypeID>25553</requiredTypeID><requiredTypeIcon>63_03</requiredTypeIcon><requiredTypeName>Cryptic Data Interface</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></inventionRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>9</quantity><requiredTypeCategoryID>7</requiredTypeCategoryID><requiredTypeGroupID>52</requiredTypeGroupID><requiredTypeGroupName>Warp Scrambler</requiredTypeGroupName><requiredTypeID>447</requiredTypeID><requiredTypeIcon>76_01</requiredTypeIcon><requiredTypeName>Warp Scrambler I</requiredTypeName><requiredTypeVolume>5.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>268</requiredTypeGroupID><requiredTypeGroupName>Industry</requiredTypeGroupName><requiredTypeID>3380</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Industry</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>1.0</damagePerJob><quantity>20</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3687</requiredTypeID><requiredTypeIcon>10_09</requiredTypeIcon><requiredTypeName>Electronic Parts</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>3</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11446</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Graviton Physics</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><manufacturingRequirementDtos><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>3</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11453</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Electronic Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></manufacturingRequirementDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>34</materialTypeID><materialTypeIcon>06_14</materialTypeIcon><materialTypeName>Tritanium</materialTypeName><materialVolume>0.01</materialVolume><quantity>247900</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>35</materialTypeID><materialTypeIcon>06_15</materialTypeIcon><materialTypeName>Pyerite</materialTypeName><materialVolume>0.01</materialVolume><quantity>81325</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>36</materialTypeID><materialTypeIcon>06_12</materialTypeIcon><materialTypeName>Mexallon</materialTypeName><materialVolume>0.01</materialVolume><quantity>43931</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>37</materialTypeID><materialTypeIcon>06_16</materialTypeIcon><materialTypeName>Isogen</materialTypeName><materialVolume>0.01</materialVolume><quantity>10663</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>38</materialTypeID><materialTypeIcon>11_09</materialTypeIcon><materialTypeName>Nocxium</materialTypeName><materialVolume>0.01</materialVolume><quantity>2832</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>39</materialTypeID><materialTypeIcon>11_11</materialTypeIcon><materialTypeName>Zydrine</materialTypeName><materialVolume>0.01</materialVolume><quantity>1262</quantity></materialDtos><materialDtos><materialTypeCategoryID>4</materialTypeCategoryID><materialTypeID>40</materialTypeID><materialTypeIcon>11_10</materialTypeIcon><materialTypeName>Megacyte</materialTypeName><materialVolume>0.01</materialVolume><quantity>320</quantity></materialDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>8</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>3</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11446</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Graviton Physics</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><materialProductivityRequirementDtos><activityID>4</activityID><activityName>Researching Material Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>3</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11453</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Electronic Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></materialProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>7</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>280</requiredTypeGroupID><requiredTypeGroupName>General</requiredTypeGroupName><requiredTypeID>3814</requiredTypeID><requiredTypeIcon>10_16</requiredTypeIcon><requiredTypeName>Reports</requiredTypeName><requiredTypeVolume>0.1</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>1.0</damagePerJob><quantity>6</quantity><requiredTypeCategoryID>43</requiredTypeCategoryID><requiredTypeGroupID>1034</requiredTypeGroupID><requiredTypeGroupName>Refined Commodities</requiredTypeGroupName><requiredTypeID>9836</requiredTypeID><requiredTypeIcon>24_08</requiredTypeIcon><requiredTypeName>Consumer Electronics</requiredTypeName><requiredTypeVolume>1.5</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11446</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Graviton Physics</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos><timeProductivityRequirementDtos><activityID>3</activityID><activityName>Researching Time Productivity</activityName><damagePerJob>0.0</damagePerJob><quantity>4</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>270</requiredTypeGroupID><requiredTypeGroupName>Science</requiredTypeGroupName><requiredTypeID>11453</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Electronic Engineering</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></timeProductivityRequirementDtos></blueprintDetailsDto>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_blueprintDetailsForTypeName_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeName/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_extraMaterialsByTypeID() throws Exception {
        URL url = new URL(baseUrl + "/extraMaterialsForTypeID/20188");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20410,\"requiredTypeName\":\"Datacore - Gallentean Starship Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_02\",\"damagePerJob\":\"1.0\",\"quantity\":64,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20424,\"requiredTypeName\":\"Datacore - Mechanical Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_03\",\"damagePerJob\":\"1.0\",\"quantity\":64,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":22242,\"requiredTypeName\":\"Capital Ship Construction\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":269,\"requiredTypeGroupName\":\"Mechanic\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":1,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":25855,\"requiredTypeName\":\"Incognito Ship Data Interface\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":716,\"requiredTypeGroupName\":\"Data Interfaces\",\"requiredTypeIcon\":\"63_06\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"1.0\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>64</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20410</requiredTypeID><requiredTypeIcon>64_02</requiredTypeIcon><requiredTypeName>Datacore - Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>64</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20424</requiredTypeID><requiredTypeIcon>64_03</requiredTypeIcon><requiredTypeName>Datacore - Mechanical Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>269</requiredTypeGroupID><requiredTypeGroupName>Mechanic</requiredTypeGroupName><requiredTypeID>22242</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Capital Ship Construction</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>716</requiredTypeGroupID><requiredTypeGroupName>Data Interfaces</requiredTypeGroupName><requiredTypeID>25855</requiredTypeID><requiredTypeIcon>63_06</requiredTypeIcon><requiredTypeName>Incognito Ship Data Interface</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_extraMaterialsByTypeID_NonExistingID() throws Exception {
        URL url = new URL(baseUrl + "/extraMaterialsForTypeID/1234567890");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_extraMaterialsByTypeID_StringInsteadOfID() throws Exception {
        URL url = new URL(baseUrl + "/extraMaterialsForTypeID/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_extraMaterialsByTypeName() throws Exception {
        URL url = new URL(baseUrl + "/extraMaterialsForTypeName/Obelisk+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20410,\"requiredTypeName\":\"Datacore - Gallentean Starship Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_02\",\"damagePerJob\":\"1.0\",\"quantity\":64,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20424,\"requiredTypeName\":\"Datacore - Mechanical Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_03\",\"damagePerJob\":\"1.0\",\"quantity\":64,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":22242,\"requiredTypeName\":\"Capital Ship Construction\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":269,\"requiredTypeGroupName\":\"Mechanic\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":1,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":25855,\"requiredTypeName\":\"Incognito Ship Data Interface\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":716,\"requiredTypeGroupName\":\"Data Interfaces\",\"requiredTypeIcon\":\"63_06\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"1.0\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>64</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20410</requiredTypeID><requiredTypeIcon>64_02</requiredTypeIcon><requiredTypeName>Datacore - Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>64</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20424</requiredTypeID><requiredTypeIcon>64_03</requiredTypeIcon><requiredTypeName>Datacore - Mechanical Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>269</requiredTypeGroupID><requiredTypeGroupName>Mechanic</requiredTypeGroupName><requiredTypeID>22242</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Capital Ship Construction</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>716</requiredTypeGroupID><requiredTypeGroupName>Data Interfaces</requiredTypeGroupName><requiredTypeID>25855</requiredTypeID><requiredTypeIcon>63_06</requiredTypeIcon><requiredTypeName>Incognito Ship Data Interface</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
        url = new URL(baseUrl + "/extraMaterialsForTypeName/Obelisk%20Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20410,\"requiredTypeName\":\"Datacore - Gallentean Starship Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_02\",\"damagePerJob\":\"1.0\",\"quantity\":64,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":20424,\"requiredTypeName\":\"Datacore - Mechanical Engineering\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":333,\"requiredTypeGroupName\":\"Datacores\",\"requiredTypeIcon\":\"64_03\",\"damagePerJob\":\"1.0\",\"quantity\":64,\"requiredTypeVolume\":\"1.0\"},{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":22242,\"requiredTypeName\":\"Capital Ship Construction\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":269,\"requiredTypeGroupName\":\"Mechanic\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":1,\"requiredTypeVolume\":\"0.01\"},{\"activityID\":8,\"activityName\":\"Invention\",\"requiredTypeID\":25855,\"requiredTypeName\":\"Incognito Ship Data Interface\",\"requiredTypeCategoryID\":17,\"requiredTypeGroupID\":716,\"requiredTypeGroupName\":\"Data Interfaces\",\"requiredTypeIcon\":\"63_06\",\"damagePerJob\":\"1.0\",\"quantity\":1,\"requiredTypeVolume\":\"1.0\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>64</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20410</requiredTypeID><requiredTypeIcon>64_02</requiredTypeIcon><requiredTypeName>Datacore - Gallentean Starship Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>64</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>333</requiredTypeGroupID><requiredTypeGroupName>Datacores</requiredTypeGroupName><requiredTypeID>20424</requiredTypeID><requiredTypeIcon>64_03</requiredTypeIcon><requiredTypeName>Datacore - Mechanical Engineering</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>1</activityID><activityName>Manufacturing</activityName><damagePerJob>0.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>16</requiredTypeCategoryID><requiredTypeGroupID>269</requiredTypeGroupID><requiredTypeGroupName>Mechanic</requiredTypeGroupName><requiredTypeID>22242</requiredTypeID><requiredTypeIcon>50_11</requiredTypeIcon><requiredTypeName>Capital Ship Construction</requiredTypeName><requiredTypeVolume>0.01</requiredTypeVolume></row><row xsi:type=\"ramTypeRequirementDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><activityID>8</activityID><activityName>Invention</activityName><damagePerJob>1.0</damagePerJob><quantity>1</quantity><requiredTypeCategoryID>17</requiredTypeCategoryID><requiredTypeGroupID>716</requiredTypeGroupID><requiredTypeGroupName>Data Interfaces</requiredTypeGroupName><requiredTypeID>25855</requiredTypeID><requiredTypeIcon>63_06</requiredTypeIcon><requiredTypeName>Incognito Ship Data Interface</requiredTypeName><requiredTypeVolume>1.0</requiredTypeVolume></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
        url = new URL(baseUrl + "/extraMaterialsForTypeName/Obelisk Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_extraMaterialsByTypeName_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/extraMaterialsForTypeName/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_lookupBlueprintType() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/Mega");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":23849,\"itemCategoryID\":9,\"name\":\"\\u0027Catapult\\u0027 Mega Beam Laser I Blueprint\",\"icon\":\"13_11\"},{\"itemTypeID\":23847,\"itemCategoryID\":9,\"name\":\"\\u0027Halberd\\u0027 Mega Pulse Laser I Blueprint\",\"icon\":\"13_15\"},{\"itemTypeID\":3547,\"itemCategoryID\":9,\"name\":\"Limited Mega Ion Siege Blaster I Blueprint\",\"icon\":\"13_03\"},{\"itemTypeID\":847,\"itemCategoryID\":9,\"name\":\"Mega Beam Laser I Blueprint\",\"icon\":\"13_11\"},{\"itemTypeID\":3050,\"itemCategoryID\":9,\"name\":\"Mega Beam Laser II Blueprint\",\"icon\":\"13_11\"},{\"itemTypeID\":30224,\"itemCategoryID\":9,\"name\":\"Mega Module Blueprint\",\"icon\":\"01_08\"},{\"itemTypeID\":846,\"itemCategoryID\":9,\"name\":\"Mega Pulse Laser I Blueprint\",\"icon\":\"13_15\"},{\"itemTypeID\":3058,\"itemCategoryID\":9,\"name\":\"Mega Pulse Laser II Blueprint\",\"icon\":\"13_15\"},{\"itemTypeID\":995,\"itemCategoryID\":9,\"name\":\"Megathron Blueprint\"},{\"itemTypeID\":13203,\"itemCategoryID\":9,\"name\":\"Megathron Federate Issue Blueprint\"},{\"itemTypeID\":17729,\"itemCategoryID\":9,\"name\":\"Megathron Navy Issue Blueprint\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_11</icon><itemCategoryID>9</itemCategoryID><itemTypeID>23849</itemTypeID><name>'Catapult' Mega Beam Laser I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_15</icon><itemCategoryID>9</itemCategoryID><itemTypeID>23847</itemTypeID><name>'Halberd' Mega Pulse Laser I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_03</icon><itemCategoryID>9</itemCategoryID><itemTypeID>3547</itemTypeID><name>Limited Mega Ion Siege Blaster I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_11</icon><itemCategoryID>9</itemCategoryID><itemTypeID>847</itemTypeID><name>Mega Beam Laser I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_11</icon><itemCategoryID>9</itemCategoryID><itemTypeID>3050</itemTypeID><name>Mega Beam Laser II Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>9</itemCategoryID><itemTypeID>30224</itemTypeID><name>Mega Module Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_15</icon><itemCategoryID>9</itemCategoryID><itemTypeID>846</itemTypeID><name>Mega Pulse Laser I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>13_15</icon><itemCategoryID>9</itemCategoryID><itemTypeID>3058</itemTypeID><name>Mega Pulse Laser II Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>9</itemCategoryID><itemTypeID>995</itemTypeID><name>Megathron Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>9</itemCategoryID><itemTypeID>13203</itemTypeID><name>Megathron Federate Issue Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>9</itemCategoryID><itemTypeID>17729</itemTypeID><name>Megathron Navy Issue Blueprint</name></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_lookupBlueprintType_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset/>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_lookupBlueprintType_TooShortName() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/A");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_lookupBlueprintType_FullSearch_CaseSensivity() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/meGAt");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":995,\"itemCategoryID\":9,\"name\":\"Megathron Blueprint\"},{\"itemTypeID\":13203,\"itemCategoryID\":9,\"name\":\"Megathron Federate Issue Blueprint\"},{\"itemTypeID\":17729,\"itemCategoryID\":9,\"name\":\"Megathron Navy Issue Blueprint\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupBlueprintType_FullSearch_MatchingWordInMiddle() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/dron");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":21030,\"itemCategoryID\":9,\"name\":\"Capital Drone Bay Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":1218,\"itemCategoryID\":9,\"name\":\"Civilian Mining Drone Blueprint\"},{\"itemTypeID\":2760,\"itemCategoryID\":9,\"name\":\"Drone Assembly Array Blueprint\",\"icon\":\"07_15\"},{\"itemTypeID\":24284,\"itemCategoryID\":9,\"name\":\"Drone Control Unit I Blueprint\",\"icon\":\"03_06\"},{\"itemTypeID\":23528,\"itemCategoryID\":9,\"name\":\"Drone Link Augmentor I Blueprint\",\"icon\":\"03_06\"},{\"itemTypeID\":24396,\"itemCategoryID\":9,\"name\":\"Drone Navigation Computer I Blueprint\",\"icon\":\"03_06\"},{\"itemTypeID\":25909,\"itemCategoryID\":9,\"name\":\"Large Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":26325,\"itemCategoryID\":9,\"name\":\"Large Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25917,\"itemCategoryID\":9,\"name\":\"Large Drone Durability Enhancer I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":26327,\"itemCategoryID\":9,\"name\":\"Large Drone Durability Enhancer II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25919,\"itemCategoryID\":9,\"name\":\"Large Drone Mining Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25911,\"itemCategoryID\":9,\"name\":\"Large Drone Repair Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25913,\"itemCategoryID\":9,\"name\":\"Large Drone Scope Chip I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25915,\"itemCategoryID\":9,\"name\":\"Large Drone Speed Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25925,\"itemCategoryID\":9,\"name\":\"Large Stasis Drone Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":30392,\"itemCategoryID\":9,\"name\":\"Legion Offensive - Drone Synthesis Projector Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":32028,\"itemCategoryID\":9,\"name\":\"Medium Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32032,\"itemCategoryID\":9,\"name\":\"Medium Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32036,\"itemCategoryID\":9,\"name\":\"Medium Drone Durability Enhancer I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32040,\"itemCategoryID\":9,\"name\":\"Medium Drone Durability Enhancer II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32044,\"itemCategoryID\":9,\"name\":\"Medium Drone Mining Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32048,\"itemCategoryID\":9,\"name\":\"Medium Drone Mining Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32052,\"itemCategoryID\":9,\"name\":\"Medium Drone Repair Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32056,\"itemCategoryID\":9,\"name\":\"Medium Drone Repair Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32072,\"itemCategoryID\":9,\"name\":\"Medium Drone Scope Chip I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32076,\"itemCategoryID\":9,\"name\":\"Medium Drone Scope Chip II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32060,\"itemCategoryID\":9,\"name\":\"Medium Drone Speed Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32064,\"itemCategoryID\":9,\"name\":\"Medium Drone Speed Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32092,\"itemCategoryID\":9,\"name\":\"Medium Stasis Drone Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32096,\"itemCategoryID\":9,\"name\":\"Medium Stasis Drone Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":10253,\"itemCategoryID\":9,\"name\":\"Mining Drone - Elite Blueprint\"},{\"itemTypeID\":10247,\"itemCategoryID\":9,\"name\":\"Mining Drone I Blueprint\"},{\"itemTypeID\":10251,\"itemCategoryID\":9,\"name\":\"Mining Drone II Blueprint\"},{\"itemTypeID\":30404,\"itemCategoryID\":9,\"name\":\"Proteus Offensive - Drone Synthesis Projector Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":32026,\"itemCategoryID\":9,\"name\":\"Small Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32030,\"itemCategoryID\":9,\"name\":\"Small Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32034,\"itemCategoryID\":9,\"name\":\"Small Drone Durability Enhancer I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32038,\"itemCategoryID\":9,\"name\":\"Small Drone Durability Enhancer II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32042,\"itemCategoryID\":9,\"name\":\"Small Drone Mining Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32046,\"itemCategoryID\":9,\"name\":\"Small Drone Mining Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32050,\"itemCategoryID\":9,\"name\":\"Small Drone Repair Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32054,\"itemCategoryID\":9,\"name\":\"Small Drone Repair Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32070,\"itemCategoryID\":9,\"name\":\"Small Drone Scope Chip I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32074,\"itemCategoryID\":9,\"name\":\"Small Drone Scope Chip II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32058,\"itemCategoryID\":9,\"name\":\"Small Drone Speed Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32062,\"itemCategoryID\":9,\"name\":\"Small Drone Speed Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32066,\"itemCategoryID\":9,\"name\":\"Small EW Drone Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32078,\"itemCategoryID\":9,\"name\":\"Small EW Drone Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32090,\"itemCategoryID\":9,\"name\":\"Small Stasis Drone Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32094,\"itemCategoryID\":9,\"name\":\"Small Stasis Drone Augmentor II Blueprint\",\"icon\":\"02_10\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupBlueprintType_FullSearch_TwoWords() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/small+drone");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":32026,\"itemCategoryID\":9,\"name\":\"Small Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32030,\"itemCategoryID\":9,\"name\":\"Small Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32034,\"itemCategoryID\":9,\"name\":\"Small Drone Durability Enhancer I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32038,\"itemCategoryID\":9,\"name\":\"Small Drone Durability Enhancer II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32042,\"itemCategoryID\":9,\"name\":\"Small Drone Mining Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32046,\"itemCategoryID\":9,\"name\":\"Small Drone Mining Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32050,\"itemCategoryID\":9,\"name\":\"Small Drone Repair Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32054,\"itemCategoryID\":9,\"name\":\"Small Drone Repair Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32070,\"itemCategoryID\":9,\"name\":\"Small Drone Scope Chip I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32074,\"itemCategoryID\":9,\"name\":\"Small Drone Scope Chip II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32058,\"itemCategoryID\":9,\"name\":\"Small Drone Speed Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32062,\"itemCategoryID\":9,\"name\":\"Small Drone Speed Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32066,\"itemCategoryID\":9,\"name\":\"Small EW Drone Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32078,\"itemCategoryID\":9,\"name\":\"Small EW Drone Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32090,\"itemCategoryID\":9,\"name\":\"Small Stasis Drone Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32094,\"itemCategoryID\":9,\"name\":\"Small Stasis Drone Augmentor II Blueprint\",\"icon\":\"02_10\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupBlueprintType_FullSearch_TwoWordsInMiddle() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/drone+control");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":24284,\"itemCategoryID\":9,\"name\":\"Drone Control Unit I Blueprint\",\"icon\":\"03_06\"},{\"itemTypeID\":25909,\"itemCategoryID\":9,\"name\":\"Large Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":26325,\"itemCategoryID\":9,\"name\":\"Large Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32028,\"itemCategoryID\":9,\"name\":\"Medium Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32032,\"itemCategoryID\":9,\"name\":\"Medium Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32026,\"itemCategoryID\":9,\"name\":\"Small Drone Control Range Augmentor I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":32030,\"itemCategoryID\":9,\"name\":\"Small Drone Control Range Augmentor II Blueprint\",\"icon\":\"02_10\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupBlueprintType_FullSearch_Trimming() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/gallente+");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":21945,\"itemCategoryID\":9,\"name\":\"Gallente Administrative Outpost Platform Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":2780,\"itemCategoryID\":9,\"name\":\"Gallente Control Tower Blueprint\",\"icon\":\"07_15\"},{\"itemTypeID\":2781,\"itemCategoryID\":9,\"name\":\"Gallente Control Tower Medium Blueprint\",\"icon\":\"07_15\"},{\"itemTypeID\":2782,\"itemCategoryID\":9,\"name\":\"Gallente Control Tower Small Blueprint\",\"icon\":\"07_15\"},{\"itemTypeID\":11130,\"itemCategoryID\":9,\"name\":\"Gallente Shuttle Blueprint\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupResourceType() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/Tri");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":25595,\"itemCategoryID\":4,\"name\":\"Alloyed Tritanium Bar\",\"icon\":\"69_11\"},{\"itemTypeID\":25593,\"itemCategoryID\":4,\"name\":\"Smashed Trigger Unit\",\"icon\":\"69_13\"},{\"itemTypeID\":25612,\"itemCategoryID\":4,\"name\":\"Trigger Unit\",\"icon\":\"69_14\"},{\"itemTypeID\":25598,\"itemCategoryID\":4,\"name\":\"Tripped Power Circuit\",\"icon\":\"69_15\"},{\"itemTypeID\":34,\"itemCategoryID\":4,\"name\":\"Tritanium\",\"icon\":\"06_14\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_11</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25595</itemTypeID><name>Alloyed Tritanium Bar</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_13</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25593</itemTypeID><name>Smashed Trigger Unit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_14</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25612</itemTypeID><name>Trigger Unit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_15</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25598</itemTypeID><name>Tripped Power Circuit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>06_14</icon><itemCategoryID>4</itemCategoryID><itemTypeID>34</itemTypeID><name>Tritanium</name></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_lookupResourceType_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset/>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_lookupResourceType_TooShortName() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/A");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_lookupResourceType_FullSearch_CaseSensivity() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/tRIta");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":25595,\"itemCategoryID\":4,\"name\":\"Alloyed Tritanium Bar\",\"icon\":\"69_11\"},{\"itemTypeID\":34,\"itemCategoryID\":4,\"name\":\"Tritanium\",\"icon\":\"06_14\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupResourceType_FullSearch_MatchingWordInMiddle() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/carbo");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":16659,\"itemCategoryID\":4,\"name\":\"Carbon Polymers\",\"icon\":\"50_04\"},{\"itemTypeID\":30310,\"itemCategoryID\":4,\"name\":\"Carbon-86 Epoxy Resin\",\"icon\":\"83_10\"},{\"itemTypeID\":16670,\"itemCategoryID\":4,\"name\":\"Crystalline Carbonide\",\"icon\":\"49_09\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupResourceType_FullSearch_TwoWords() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/alloyed+tritanium");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":25595,\"itemCategoryID\":4,\"name\":\"Alloyed Tritanium Bar\",\"icon\":\"69_11\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupResourceType_FullSearch_TwoWordsInMiddle() throws Exception {
        URL url = new URL(baseUrl + "/lookupResourceType/armor+plates");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":25605,\"itemCategoryID\":4,\"name\":\"Armor Plates\",\"icon\":\"69_09\"},{\"itemTypeID\":25624,\"itemCategoryID\":4,\"name\":\"Intact Armor Plates\",\"icon\":\"69_10\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupType() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/Tri");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":25595,\"itemCategoryID\":4,\"name\":\"Alloyed Tritanium Bar\",\"icon\":\"69_11\"},{\"itemTypeID\":21729,\"itemCategoryID\":17,\"name\":\"Angel Advanced Trigger Mechanism\",\"icon\":\"55_13\"},{\"itemTypeID\":21731,\"itemCategoryID\":17,\"name\":\"Angel Simple Trigger Mechanism\",\"icon\":\"55_13\"},{\"itemTypeID\":21730,\"itemCategoryID\":17,\"name\":\"Angel Standard Trigger Mechanism\",\"icon\":\"55_13\"},{\"itemTypeID\":28830,\"itemCategoryID\":17,\"name\":\"Brutor Tribe Roster\",\"icon\":\"34_06\"},{\"itemTypeID\":29105,\"itemCategoryID\":17,\"name\":\"Capital Thermonuclear Trigger Unit\",\"icon\":\"41_07\"},{\"itemTypeID\":29106,\"itemCategoryID\":9,\"name\":\"Capital Thermonuclear Trigger Unit Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":28390,\"itemCategoryID\":25,\"name\":\"Compressed Triclinic Bistot\",\"icon\":\"71_02\"},{\"itemTypeID\":28451,\"itemCategoryID\":9,\"name\":\"Compressed Triclinic Bistot Blueprint\"},{\"itemTypeID\":2979,\"itemCategoryID\":17,\"name\":\"Crate of Industrial-Grade Tritanium-Alloy Scraps\",\"icon\":\"45_10\"},{\"itemTypeID\":2980,\"itemCategoryID\":17,\"name\":\"Large Crate of Industrial-Grade Tritanium-Alloy Scraps\",\"icon\":\"45_10\"},{\"itemTypeID\":25894,\"itemCategoryID\":7,\"name\":\"Large Trimark Armor Pump I\",\"icon\":\"68_10\",\"metaLevel\":0},{\"itemTypeID\":25895,\"itemCategoryID\":9,\"name\":\"Large Trimark Armor Pump I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":26302,\"itemCategoryID\":7,\"name\":\"Large Trimark Armor Pump II\",\"icon\":\"68_10\",\"metaLevel\":5},{\"itemTypeID\":26303,\"itemCategoryID\":9,\"name\":\"Large Trimark Armor Pump II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":31055,\"itemCategoryID\":7,\"name\":\"Medium Trimark Armor Pump I\",\"icon\":\"68_10\"},{\"itemTypeID\":31056,\"itemCategoryID\":9,\"name\":\"Medium Trimark Armor Pump I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":31059,\"itemCategoryID\":7,\"name\":\"Medium Trimark Armor Pump II\",\"icon\":\"68_10\"},{\"itemTypeID\":31060,\"itemCategoryID\":9,\"name\":\"Medium Trimark Armor Pump II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":30987,\"itemCategoryID\":7,\"name\":\"Small Trimark Armor Pump I\",\"icon\":\"68_10\"},{\"itemTypeID\":30988,\"itemCategoryID\":9,\"name\":\"Small Trimark Armor Pump I Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":31057,\"itemCategoryID\":7,\"name\":\"Small Trimark Armor Pump II\",\"icon\":\"68_10\"},{\"itemTypeID\":31058,\"itemCategoryID\":9,\"name\":\"Small Trimark Armor Pump II Blueprint\",\"icon\":\"02_10\"},{\"itemTypeID\":25593,\"itemCategoryID\":4,\"name\":\"Smashed Trigger Unit\",\"icon\":\"69_13\"},{\"itemTypeID\":23147,\"itemCategoryID\":17,\"name\":\"Takmahl Tri-polished Lens\",\"icon\":\"55_16\"},{\"itemTypeID\":26842,\"itemCategoryID\":6,\"name\":\"Tempest Tribal Issue\",\"metaLevel\":6},{\"itemTypeID\":11691,\"itemCategoryID\":17,\"name\":\"Thermonuclear Trigger Unit\",\"icon\":\"41_07\"},{\"itemTypeID\":17322,\"itemCategoryID\":9,\"name\":\"Thermonuclear Trigger Unit Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":22140,\"itemCategoryID\":17,\"name\":\"Tri-Vitoc\",\"icon\":\"11_15\"},{\"itemTypeID\":27951,\"itemCategoryID\":7,\"name\":\"Triage Module I\",\"icon\":\"70_10\",\"metaLevel\":0},{\"itemTypeID\":27952,\"itemCategoryID\":9,\"name\":\"Triage Module I Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":17428,\"itemCategoryID\":25,\"name\":\"Triclinic Bistot\",\"icon\":\"23_06\"},{\"itemTypeID\":25612,\"itemCategoryID\":4,\"name\":\"Trigger Unit\",\"icon\":\"69_14\"},{\"itemTypeID\":11066,\"itemCategoryID\":17,\"name\":\"Trinary Data\",\"icon\":\"34_05\"},{\"itemTypeID\":16307,\"itemCategoryID\":7,\"name\":\"Triple-sheathed Adaptive Nano Plating I\",\"icon\":\"01_08\",\"metaLevel\":2},{\"itemTypeID\":16315,\"itemCategoryID\":7,\"name\":\"Triple-sheathed Magnetic Plating I\",\"icon\":\"01_08\",\"metaLevel\":2},{\"itemTypeID\":16323,\"itemCategoryID\":7,\"name\":\"Triple-sheathed Reactive Plating I\",\"icon\":\"01_08\",\"metaLevel\":2},{\"itemTypeID\":16331,\"itemCategoryID\":7,\"name\":\"Triple-sheathed Reflective Plating I\",\"icon\":\"01_08\",\"metaLevel\":2},{\"itemTypeID\":16347,\"itemCategoryID\":7,\"name\":\"Triple-sheathed Regenerative Plating I\",\"icon\":\"01_08\",\"metaLevel\":2},{\"itemTypeID\":16339,\"itemCategoryID\":7,\"name\":\"Triple-sheathed Thermic Plating I\",\"icon\":\"01_08\",\"metaLevel\":2},{\"itemTypeID\":25598,\"itemCategoryID\":4,\"name\":\"Tripped Power Circuit\",\"icon\":\"69_15\"},{\"itemTypeID\":593,\"itemCategoryID\":6,\"name\":\"Tristan\",\"metaLevel\":0},{\"itemTypeID\":940,\"itemCategoryID\":9,\"name\":\"Tristan Blueprint\"},{\"itemTypeID\":17916,\"itemCategoryID\":17,\"name\":\"Tritan\\u0027s Forked Key\",\"icon\":\"34_06\"},{\"itemTypeID\":34,\"itemCategoryID\":4,\"name\":\"Tritanium\",\"icon\":\"06_14\"},{\"itemTypeID\":23170,\"itemCategoryID\":17,\"name\":\"Yan Jung Trigonometric Laws\",\"icon\":\"55_12\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_11</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25595</itemTypeID><name>Alloyed Tritanium Bar</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>55_13</icon><itemCategoryID>17</itemCategoryID><itemTypeID>21729</itemTypeID><name>Angel Advanced Trigger Mechanism</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>55_13</icon><itemCategoryID>17</itemCategoryID><itemTypeID>21731</itemTypeID><name>Angel Simple Trigger Mechanism</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>55_13</icon><itemCategoryID>17</itemCategoryID><itemTypeID>21730</itemTypeID><name>Angel Standard Trigger Mechanism</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>34_06</icon><itemCategoryID>17</itemCategoryID><itemTypeID>28830</itemTypeID><name>Brutor Tribe Roster</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>41_07</icon><itemCategoryID>17</itemCategoryID><itemTypeID>29105</itemTypeID><name>Capital Thermonuclear Trigger Unit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>03_02</icon><itemCategoryID>9</itemCategoryID><itemTypeID>29106</itemTypeID><name>Capital Thermonuclear Trigger Unit Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>71_02</icon><itemCategoryID>25</itemCategoryID><itemTypeID>28390</itemTypeID><name>Compressed Triclinic Bistot</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>9</itemCategoryID><itemTypeID>28451</itemTypeID><name>Compressed Triclinic Bistot Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>45_10</icon><itemCategoryID>17</itemCategoryID><itemTypeID>2979</itemTypeID><name>Crate of Industrial-Grade Tritanium-Alloy Scraps</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>45_10</icon><itemCategoryID>17</itemCategoryID><itemTypeID>2980</itemTypeID><name>Large Crate of Industrial-Grade Tritanium-Alloy Scraps</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>68_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>25894</itemTypeID><metaLevel>0</metaLevel><name>Large Trimark Armor Pump I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>02_10</icon><itemCategoryID>9</itemCategoryID><itemTypeID>25895</itemTypeID><name>Large Trimark Armor Pump I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>68_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>26302</itemTypeID><metaLevel>5</metaLevel><name>Large Trimark Armor Pump II</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>02_10</icon><itemCategoryID>9</itemCategoryID><itemTypeID>26303</itemTypeID><name>Large Trimark Armor Pump II Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>68_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>31055</itemTypeID><name>Medium Trimark Armor Pump I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>02_10</icon><itemCategoryID>9</itemCategoryID><itemTypeID>31056</itemTypeID><name>Medium Trimark Armor Pump I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>68_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>31059</itemTypeID><name>Medium Trimark Armor Pump II</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>02_10</icon><itemCategoryID>9</itemCategoryID><itemTypeID>31060</itemTypeID><name>Medium Trimark Armor Pump II Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>68_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>30987</itemTypeID><name>Small Trimark Armor Pump I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>02_10</icon><itemCategoryID>9</itemCategoryID><itemTypeID>30988</itemTypeID><name>Small Trimark Armor Pump I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>68_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>31057</itemTypeID><name>Small Trimark Armor Pump II</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>02_10</icon><itemCategoryID>9</itemCategoryID><itemTypeID>31058</itemTypeID><name>Small Trimark Armor Pump II Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_13</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25593</itemTypeID><name>Smashed Trigger Unit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>55_16</icon><itemCategoryID>17</itemCategoryID><itemTypeID>23147</itemTypeID><name>Takmahl Tri-polished Lens</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>6</itemCategoryID><itemTypeID>26842</itemTypeID><metaLevel>6</metaLevel><name>Tempest Tribal Issue</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>41_07</icon><itemCategoryID>17</itemCategoryID><itemTypeID>11691</itemTypeID><name>Thermonuclear Trigger Unit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>03_02</icon><itemCategoryID>9</itemCategoryID><itemTypeID>17322</itemTypeID><name>Thermonuclear Trigger Unit Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>11_15</icon><itemCategoryID>17</itemCategoryID><itemTypeID>22140</itemTypeID><name>Tri-Vitoc</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>70_10</icon><itemCategoryID>7</itemCategoryID><itemTypeID>27951</itemTypeID><metaLevel>0</metaLevel><name>Triage Module I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>06_03</icon><itemCategoryID>9</itemCategoryID><itemTypeID>27952</itemTypeID><name>Triage Module I Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>23_06</icon><itemCategoryID>25</itemCategoryID><itemTypeID>17428</itemTypeID><name>Triclinic Bistot</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_14</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25612</itemTypeID><name>Trigger Unit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>34_05</icon><itemCategoryID>17</itemCategoryID><itemTypeID>11066</itemTypeID><name>Trinary Data</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>7</itemCategoryID><itemTypeID>16307</itemTypeID><metaLevel>2</metaLevel><name>Triple-sheathed Adaptive Nano Plating I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>7</itemCategoryID><itemTypeID>16315</itemTypeID><metaLevel>2</metaLevel><name>Triple-sheathed Magnetic Plating I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>7</itemCategoryID><itemTypeID>16323</itemTypeID><metaLevel>2</metaLevel><name>Triple-sheathed Reactive Plating I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>7</itemCategoryID><itemTypeID>16331</itemTypeID><metaLevel>2</metaLevel><name>Triple-sheathed Reflective Plating I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>7</itemCategoryID><itemTypeID>16347</itemTypeID><metaLevel>2</metaLevel><name>Triple-sheathed Regenerative Plating I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>01_08</icon><itemCategoryID>7</itemCategoryID><itemTypeID>16339</itemTypeID><metaLevel>2</metaLevel><name>Triple-sheathed Thermic Plating I</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>69_15</icon><itemCategoryID>4</itemCategoryID><itemTypeID>25598</itemTypeID><name>Tripped Power Circuit</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>6</itemCategoryID><itemTypeID>593</itemTypeID><metaLevel>0</metaLevel><name>Tristan</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><itemCategoryID>9</itemCategoryID><itemTypeID>940</itemTypeID><name>Tristan Blueprint</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>34_06</icon><itemCategoryID>17</itemCategoryID><itemTypeID>17916</itemTypeID><name>Tritan's Forked Key</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>06_14</icon><itemCategoryID>4</itemCategoryID><itemTypeID>34</itemTypeID><name>Tritanium</name></row><row xsi:type=\"invTypeBasicInfoDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><icon>55_12</icon><itemCategoryID>17</itemCategoryID><itemTypeID>23170</itemTypeID><name>Yan Jung Trigonometric Laws</name></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_lookupType_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset/>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_lookupType_TooShortName() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/A");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_lookupType_FullSearch_CaseSensivity() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/moRO");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":19724,\"itemCategoryID\":6,\"name\":\"Moros\"},{\"itemTypeID\":19725,\"itemCategoryID\":9,\"name\":\"Moros Blueprint\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupType_FullSearch_MatchingWordInMiddle() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/cluster");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":29055,\"itemCategoryID\":17,\"name\":\"Capital Gravimetric Sensor Cluster\",\"icon\":\"37_05\"},{\"itemTypeID\":29056,\"itemCategoryID\":9,\"name\":\"Capital Gravimetric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":29065,\"itemCategoryID\":17,\"name\":\"Capital Ladar Sensor Cluster\",\"icon\":\"37_07\"},{\"itemTypeID\":29066,\"itemCategoryID\":9,\"name\":\"Capital Ladar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":29069,\"itemCategoryID\":17,\"name\":\"Capital Magnetometric Sensor Cluster\",\"icon\":\"37_06\"},{\"itemTypeID\":29070,\"itemCategoryID\":9,\"name\":\"Capital Magnetometric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":29095,\"itemCategoryID\":17,\"name\":\"Capital Radar Sensor Cluster\",\"icon\":\"37_08\"},{\"itemTypeID\":29096,\"itemCategoryID\":9,\"name\":\"Capital Radar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":21013,\"itemCategoryID\":17,\"name\":\"Capital Sensor Cluster\",\"icon\":\"54_03\"},{\"itemTypeID\":21014,\"itemCategoryID\":9,\"name\":\"Capital Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":32241,\"itemCategoryID\":17,\"name\":\"Drive Cluster EDF-285\",\"icon\":\"24_11\"},{\"itemTypeID\":5279,\"itemCategoryID\":7,\"name\":\"F-23 Reciprocal Sensor Cluster Link\",\"icon\":\"03_09\",\"metaLevel\":4},{\"itemTypeID\":11534,\"itemCategoryID\":17,\"name\":\"Gravimetric Sensor Cluster\",\"icon\":\"37_05\"},{\"itemTypeID\":17340,\"itemCategoryID\":9,\"name\":\"Gravimetric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":11536,\"itemCategoryID\":17,\"name\":\"Ladar Sensor Cluster\",\"icon\":\"37_07\"},{\"itemTypeID\":17333,\"itemCategoryID\":9,\"name\":\"Ladar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":11535,\"itemCategoryID\":17,\"name\":\"Magnetometric Sensor Cluster\",\"icon\":\"37_06\"},{\"itemTypeID\":17345,\"itemCategoryID\":9,\"name\":\"Magnetometric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":6218,\"itemCategoryID\":7,\"name\":\"Protected Gravimetric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":1},{\"itemTypeID\":6222,\"itemCategoryID\":7,\"name\":\"Protected LADAR Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":1},{\"itemTypeID\":6226,\"itemCategoryID\":7,\"name\":\"Protected Magnetometric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":1},{\"itemTypeID\":6230,\"itemCategoryID\":7,\"name\":\"Protected Multi-Frequency Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":1},{\"itemTypeID\":6234,\"itemCategoryID\":7,\"name\":\"Protected RADAR Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":1},{\"itemTypeID\":7895,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Gravimetric Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7893,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Ladar Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7914,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Magnetometric Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7896,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Omni Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7892,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Radar Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":11537,\"itemCategoryID\":17,\"name\":\"Radar Sensor Cluster\",\"icon\":\"37_08\"},{\"itemTypeID\":17336,\"itemCategoryID\":9,\"name\":\"Radar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":6242,\"itemCategoryID\":7,\"name\":\"Sealed Gravimetric Backup Cluster\",\"icon\":\"04_10\",\"metaLevel\":0},{\"itemTypeID\":6241,\"itemCategoryID\":7,\"name\":\"Sealed LADAR Backup Cluster\",\"icon\":\"04_10\",\"metaLevel\":0},{\"itemTypeID\":6238,\"itemCategoryID\":7,\"name\":\"Sealed Magnetometric Backup Cluster\",\"icon\":\"04_10\",\"metaLevel\":0},{\"itemTypeID\":6239,\"itemCategoryID\":7,\"name\":\"Sealed Multi-Frequency Backup Cluster\",\"icon\":\"04_10\",\"metaLevel\":0},{\"itemTypeID\":6225,\"itemCategoryID\":7,\"name\":\"Sealed RADAR Backup Cluster\",\"icon\":\"04_10\",\"metaLevel\":0},{\"itemTypeID\":20238,\"itemCategoryID\":7,\"name\":\"Secure Gravimetric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":2},{\"itemTypeID\":20244,\"itemCategoryID\":7,\"name\":\"Secure Ladar Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":2},{\"itemTypeID\":20250,\"itemCategoryID\":7,\"name\":\"Secure Magnetometric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":2},{\"itemTypeID\":20260,\"itemCategoryID\":7,\"name\":\"Secure Radar Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":2},{\"itemTypeID\":20240,\"itemCategoryID\":7,\"name\":\"Shielded Gravimetric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":3},{\"itemTypeID\":20246,\"itemCategoryID\":7,\"name\":\"Shielded Ladar Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":3},{\"itemTypeID\":20252,\"itemCategoryID\":7,\"name\":\"Shielded Magnetometric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":3},{\"itemTypeID\":20262,\"itemCategoryID\":7,\"name\":\"Shielded Radar Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":3},{\"itemTypeID\":21722,\"itemCategoryID\":17,\"name\":\"Sleeper Nanite Cluster\",\"icon\":\"55_15\"},{\"itemTypeID\":20242,\"itemCategoryID\":7,\"name\":\"Warded Gravimetric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":20248,\"itemCategoryID\":7,\"name\":\"Warded Ladar Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":20254,\"itemCategoryID\":7,\"name\":\"Warded Magnetometric Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":20264,\"itemCategoryID\":7,\"name\":\"Warded Radar Backup Cluster I\",\"icon\":\"04_10\",\"metaLevel\":4}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupType_FullSearch_TwoWords() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/deep+core");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":11395,\"itemCategoryID\":16,\"name\":\"Deep Core Mining\",\"icon\":\"50_11\"},{\"itemTypeID\":12108,\"itemCategoryID\":7,\"name\":\"Deep Core Mining Laser I\",\"icon\":\"35_01\",\"metaLevel\":0},{\"itemTypeID\":12109,\"itemCategoryID\":9,\"name\":\"Deep Core Mining Laser I Blueprint\",\"icon\":\"12_08\"},{\"itemTypeID\":18068,\"itemCategoryID\":7,\"name\":\"Modulated Deep Core Miner II\",\"icon\":\"35_01\",\"metaLevel\":5},{\"itemTypeID\":18069,\"itemCategoryID\":9,\"name\":\"Modulated Deep Core Miner II Blueprint\",\"icon\":\"12_08\"},{\"itemTypeID\":24305,\"itemCategoryID\":7,\"name\":\"Modulated Deep Core Strip Miner II\",\"icon\":\"49_05\",\"metaLevel\":5},{\"itemTypeID\":24306,\"itemCategoryID\":9,\"name\":\"Modulated Deep Core Strip Miner II Blueprint\",\"icon\":\"12_08\"},{\"itemTypeID\":28748,\"itemCategoryID\":7,\"name\":\"ORE Deep Core Mining Laser\",\"icon\":\"35_01\",\"metaLevel\":6}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupType_FullSearch_TwoWordsInMiddle() throws Exception {
        URL url = new URL(baseUrl + "/lookupType/sensor+cluster");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":29055,\"itemCategoryID\":17,\"name\":\"Capital Gravimetric Sensor Cluster\",\"icon\":\"37_05\"},{\"itemTypeID\":29056,\"itemCategoryID\":9,\"name\":\"Capital Gravimetric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":29065,\"itemCategoryID\":17,\"name\":\"Capital Ladar Sensor Cluster\",\"icon\":\"37_07\"},{\"itemTypeID\":29066,\"itemCategoryID\":9,\"name\":\"Capital Ladar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":29069,\"itemCategoryID\":17,\"name\":\"Capital Magnetometric Sensor Cluster\",\"icon\":\"37_06\"},{\"itemTypeID\":29070,\"itemCategoryID\":9,\"name\":\"Capital Magnetometric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":29095,\"itemCategoryID\":17,\"name\":\"Capital Radar Sensor Cluster\",\"icon\":\"37_08\"},{\"itemTypeID\":29096,\"itemCategoryID\":9,\"name\":\"Capital Radar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":21013,\"itemCategoryID\":17,\"name\":\"Capital Sensor Cluster\",\"icon\":\"54_03\"},{\"itemTypeID\":21014,\"itemCategoryID\":9,\"name\":\"Capital Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":5279,\"itemCategoryID\":7,\"name\":\"F-23 Reciprocal Sensor Cluster Link\",\"icon\":\"03_09\",\"metaLevel\":4},{\"itemTypeID\":11534,\"itemCategoryID\":17,\"name\":\"Gravimetric Sensor Cluster\",\"icon\":\"37_05\"},{\"itemTypeID\":17340,\"itemCategoryID\":9,\"name\":\"Gravimetric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":11536,\"itemCategoryID\":17,\"name\":\"Ladar Sensor Cluster\",\"icon\":\"37_07\"},{\"itemTypeID\":17333,\"itemCategoryID\":9,\"name\":\"Ladar Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":11535,\"itemCategoryID\":17,\"name\":\"Magnetometric Sensor Cluster\",\"icon\":\"37_06\"},{\"itemTypeID\":17345,\"itemCategoryID\":9,\"name\":\"Magnetometric Sensor Cluster Blueprint\",\"icon\":\"03_02\"},{\"itemTypeID\":7895,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Gravimetric Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7893,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Ladar Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7914,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Magnetometric Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7896,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Omni Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":7892,\"itemCategoryID\":7,\"name\":\"Prototype ECCM I Radar Sensor Cluster\",\"icon\":\"04_10\",\"metaLevel\":4},{\"itemTypeID\":11537,\"itemCategoryID\":17,\"name\":\"Radar Sensor Cluster\",\"icon\":\"37_08\"},{\"itemTypeID\":17336,\"itemCategoryID\":9,\"name\":\"Radar Sensor Cluster Blueprint\",\"icon\":\"03_02\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_typeIdToTypeName() throws Exception {
        URL url = new URL(baseUrl + "/typeIdToTypeName/20187");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("Obelisk"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/plain; charset=utf-8"));
    }

    @Test
    public void test_typeIdToTypeName_NonExistingID() throws Exception {
        URL url = new URL(baseUrl + "/typeIdToTypeName/1234567890");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_typeIdToTypeName_StringInsteadOfID() throws Exception {
        URL url = new URL(baseUrl + "/typeIdToTypeName/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_typeNameToTypeID() throws Exception {
        URL url = new URL(baseUrl + "/typeNameToTypeID/Obelisk");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("20187"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/plain; charset=utf-8"));
        url = new URL(baseUrl + "/typeNameToTypeID/Obelisk+Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("20188"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/plain; charset=utf-8"));
        url = new URL(baseUrl + "/typeNameToTypeID/Obelisk%20Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("20188"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/plain; charset=utf-8"));
        url = new URL(baseUrl + "/typeNameToTypeID/Obelisk Blueprint");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_typeNameToTypeID_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/typeNameToTypeID/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_version() throws Exception {
        URL url = new URL(baseUrl + "/version");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertTrue(getResponse(connection).endsWith("-cru16"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/html"));
    }

    @Test
    public void test_root() throws Exception {
        URL url = new URL(baseUrl + "/");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertTrue(getResponse(connection).endsWith("</html>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/html"));
        url = new URL(baseUrl + "/robots.txt");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertTrue(getResponse(connection).endsWith("Disallow: /"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/plain"));
        url = new URL(baseUrl + "/favicon.ico");
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("image/x-icon"));
    }

    @Test
    public void test_tyr101specific_SBU() throws Exception {
        URL url = new URL(baseUrl + "/typeNameToTypeID/Sovereignty+Blockade+Unit+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "text/plain");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("2738"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("text/plain; charset=utf-8"));
    }

    @Test
    public void test_inc11specific_Noctis() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeName/Noctis+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":3039,\"blueprintTypeName\":\"Noctis Blueprint\",\"productTypeID\":2998,\"productTypeName\":\"Noctis\",\"productCategoryID\":6,\"techLevel\":1,\"productionTime\":12000,\"researchProductivityTime\":240000,\"researchMaterialTime\":240000,\"researchCopyTime\":240000,\"researchTechTime\":180000,\"productivityModifier\":2400,\"wasteFactor\":10,\"maxProductionLimit\":15,\"productVolume\":\"270000.0\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[{\"materialTypeID\":34,\"materialTypeName\":\"Tritanium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_14\",\"materialVolume\":\"0.01\",\"quantity\":3349410},{\"materialTypeID\":35,\"materialTypeName\":\"Pyerite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_15\",\"materialVolume\":\"0.01\",\"quantity\":936043},{\"materialTypeID\":36,\"materialTypeName\":\"Mexallon\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_12\",\"materialVolume\":\"0.01\",\"quantity\":276936},{\"materialTypeID\":37,\"materialTypeName\":\"Isogen\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_16\",\"materialVolume\":\"0.01\",\"quantity\":50713},{\"materialTypeID\":38,\"materialTypeName\":\"Nocxium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_09\",\"materialVolume\":\"0.01\",\"quantity\":24630},{\"materialTypeID\":39,\"materialTypeName\":\"Zydrine\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_11\",\"materialVolume\":\"0.01\",\"quantity\":3438},{\"materialTypeID\":40,\"materialTypeName\":\"Megacyte\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_10\",\"materialVolume\":\"0.01\",\"quantity\":1580}],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":1,\"requiredTypeVolume\":\"0.01\"}],\"timeProductivityRequirementDtos\":[],\"materialProductivityRequirementDtos\":[],\"copyingRequirementDtos\":[],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_cur100specific_Talos() throws Exception {
        URL url = new URL(baseUrl + "/blueprintDetailsForTypeName/Talos+Blueprint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("{\"invBlueprintTypeDto\":{\"blueprintTypeID\":3039,\"blueprintTypeName\":\"Noctis Blueprint\",\"productTypeID\":2998,\"productTypeName\":\"Noctis\",\"productCategoryID\":6,\"techLevel\":1,\"productionTime\":12000,\"researchProductivityTime\":240000,\"researchMaterialTime\":240000,\"researchCopyTime\":240000,\"researchTechTime\":180000,\"productivityModifier\":2400,\"wasteFactor\":10,\"maxProductionLimit\":15,\"productVolume\":\"270000.0\",\"productPortionSize\":1,\"dumpVersion\":\"cru16\"},\"materialDtos\":[{\"materialTypeID\":34,\"materialTypeName\":\"Tritanium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_14\",\"materialVolume\":\"0.01\",\"quantity\":3349410},{\"materialTypeID\":35,\"materialTypeName\":\"Pyerite\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_15\",\"materialVolume\":\"0.01\",\"quantity\":936043},{\"materialTypeID\":36,\"materialTypeName\":\"Mexallon\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_12\",\"materialVolume\":\"0.01\",\"quantity\":276936},{\"materialTypeID\":37,\"materialTypeName\":\"Isogen\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"06_16\",\"materialVolume\":\"0.01\",\"quantity\":50713},{\"materialTypeID\":38,\"materialTypeName\":\"Nocxium\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_09\",\"materialVolume\":\"0.01\",\"quantity\":24630},{\"materialTypeID\":39,\"materialTypeName\":\"Zydrine\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_11\",\"materialVolume\":\"0.01\",\"quantity\":3438},{\"materialTypeID\":40,\"materialTypeName\":\"Megacyte\",\"materialTypeCategoryID\":4,\"materialTypeIcon\":\"11_10\",\"materialVolume\":\"0.01\",\"quantity\":1580}],\"manufacturingRequirementDtos\":[{\"activityID\":1,\"activityName\":\"Manufacturing\",\"requiredTypeID\":3380,\"requiredTypeName\":\"Industry\",\"requiredTypeCategoryID\":16,\"requiredTypeGroupID\":268,\"requiredTypeGroupName\":\"Industry\",\"requiredTypeIcon\":\"50_11\",\"damagePerJob\":\"0.0\",\"quantity\":1,\"requiredTypeVolume\":\"0.01\"}],\"timeProductivityRequirementDtos\":[],\"materialProductivityRequirementDtos\":[],\"copyingRequirementDtos\":[],\"reverseEngineeringRequirementDtos\":[],\"inventionRequirementDtos\":[]}"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_planetSchematicForTypeID() throws Exception {
        URL url = new URL(baseUrl + "/planetSchematicForTypeID/9838");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"schematicTypeID\":9838,\"schematicTypeName\":\"Superconductors\",\"schematicGroupID\":1034,\"schematicGroupName\":\"Refined Commodities\",\"schematicIcon\":\"24_09\",\"schematicCycleTime\":3600,\"schematicQuantity\":5,\"schematicVolume\":\"1.5\",\"requiredTypeID\":2389,\"requiredTypeName\":\"Plasmoids\",\"requiredGroupID\":1042,\"requiredGroupName\":\"Basic Commodities\",\"requiredIcon\":\"96_07\",\"requiredQuantity\":40,\"requiredVolume\":\"0.38\"},{\"schematicTypeID\":9838,\"schematicTypeName\":\"Superconductors\",\"schematicGroupID\":1034,\"schematicGroupName\":\"Refined Commodities\",\"schematicIcon\":\"24_09\",\"schematicCycleTime\":3600,\"schematicQuantity\":5,\"schematicVolume\":\"1.5\",\"requiredTypeID\":3645,\"requiredTypeName\":\"Water\",\"requiredGroupID\":280,\"requiredGroupName\":\"General\",\"requiredIcon\":\"10_04\",\"requiredQuantity\":40,\"requiredVolume\":\"0.38\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"planetSchematicDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><requiredGroupID>1042</requiredGroupID><requiredGroupName>Basic Commodities</requiredGroupName><requiredIcon>96_07</requiredIcon><requiredQuantity>40</requiredQuantity><requiredTypeID>2389</requiredTypeID><requiredTypeName>Plasmoids</requiredTypeName><requiredVolume>0.38</requiredVolume><schematicCycleTime>3600</schematicCycleTime><schematicGroupID>1034</schematicGroupID><schematicGroupName>Refined Commodities</schematicGroupName><schematicIcon>24_09</schematicIcon><schematicQuantity>5</schematicQuantity><schematicTypeID>9838</schematicTypeID><schematicTypeName>Superconductors</schematicTypeName><schematicVolume>1.5</schematicVolume></row><row xsi:type=\"planetSchematicDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><requiredGroupID>280</requiredGroupID><requiredGroupName>General</requiredGroupName><requiredIcon>10_04</requiredIcon><requiredQuantity>40</requiredQuantity><requiredTypeID>3645</requiredTypeID><requiredTypeName>Water</requiredTypeName><requiredVolume>0.38</requiredVolume><schematicCycleTime>3600</schematicCycleTime><schematicGroupID>1034</schematicGroupID><schematicGroupName>Refined Commodities</schematicGroupName><schematicIcon>24_09</schematicIcon><schematicQuantity>5</schematicQuantity><schematicTypeID>9838</schematicTypeID><schematicTypeName>Superconductors</schematicTypeName><schematicVolume>1.5</schematicVolume></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_planetSchematicForTypeID_NonExistingID() throws Exception {
        URL url = new URL(baseUrl + "/planetSchematicForTypeID/1234567890");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_planetSchematicForTypeID_StringInsteadOfID() throws Exception {
        URL url = new URL(baseUrl + "/planetSchematicForTypeID/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_planetSchematicForTypeName() throws Exception {
        URL url = new URL(baseUrl + "/planetSchematicForTypeName/Rocket+Fuel");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"schematicTypeID\":9830,\"schematicTypeName\":\"Rocket Fuel\",\"schematicGroupID\":1034,\"schematicGroupName\":\"Refined Commodities\",\"schematicIcon\":\"24_05\",\"schematicCycleTime\":3600,\"schematicQuantity\":5,\"schematicVolume\":\"1.5\",\"requiredTypeID\":2389,\"requiredTypeName\":\"Plasmoids\",\"requiredGroupID\":1042,\"requiredGroupName\":\"Basic Commodities\",\"requiredIcon\":\"96_07\",\"requiredQuantity\":40,\"requiredVolume\":\"0.38\"},{\"schematicTypeID\":9830,\"schematicTypeName\":\"Rocket Fuel\",\"schematicGroupID\":1034,\"schematicGroupName\":\"Refined Commodities\",\"schematicIcon\":\"24_05\",\"schematicCycleTime\":3600,\"schematicQuantity\":5,\"schematicVolume\":\"1.5\",\"requiredTypeID\":2390,\"requiredTypeName\":\"Electrolytes\",\"requiredGroupID\":1042,\"requiredGroupName\":\"Basic Commodities\",\"requiredIcon\":\"96_09\",\"requiredQuantity\":40,\"requiredVolume\":\"0.38\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><rowset><row xsi:type=\"planetSchematicDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><requiredGroupID>1042</requiredGroupID><requiredGroupName>Basic Commodities</requiredGroupName><requiredIcon>96_07</requiredIcon><requiredQuantity>40</requiredQuantity><requiredTypeID>2389</requiredTypeID><requiredTypeName>Plasmoids</requiredTypeName><requiredVolume>0.38</requiredVolume><schematicCycleTime>3600</schematicCycleTime><schematicGroupID>1034</schematicGroupID><schematicGroupName>Refined Commodities</schematicGroupName><schematicIcon>24_05</schematicIcon><schematicQuantity>5</schematicQuantity><schematicTypeID>9830</schematicTypeID><schematicTypeName>Rocket Fuel</schematicTypeName><schematicVolume>1.5</schematicVolume></row><row xsi:type=\"planetSchematicDto\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><requiredGroupID>1042</requiredGroupID><requiredGroupName>Basic Commodities</requiredGroupName><requiredIcon>96_09</requiredIcon><requiredQuantity>40</requiredQuantity><requiredTypeID>2390</requiredTypeID><requiredTypeName>Electrolytes</requiredTypeName><requiredVolume>0.38</requiredVolume><schematicCycleTime>3600</schematicCycleTime><schematicGroupID>1034</schematicGroupID><schematicGroupName>Refined Commodities</schematicGroupName><schematicIcon>24_05</schematicIcon><schematicQuantity>5</schematicQuantity><schematicTypeID>9830</schematicTypeID><schematicTypeName>Rocket Fuel</schematicTypeName><schematicVolume>1.5</schematicVolume></row></rowset>"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/xml; charset=utf-8"));
    }

    @Test
    public void test_planetSchematicForTypeName_NonExistingName() throws Exception {
        URL url = new URL(baseUrl + "/planetSchematicForTypeName/blah-blah");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(400));
        connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/xml");
        assertThat(connection.getResponseCode(), equalTo(400));
    }

    @Test
    public void test_lookupType_FullSearch_ThreeWords_Issue31() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/warp+Disruptor+II");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":26889,\"itemCategoryID\":9,\"name\":\"Mobile Large Warp Disruptor II Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":26891,\"itemCategoryID\":9,\"name\":\"Mobile Medium Warp Disruptor II Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":26893,\"itemCategoryID\":9,\"name\":\"Mobile Small Warp Disruptor II Blueprint\",\"icon\":\"06_03\"},{\"itemTypeID\":3245,\"itemCategoryID\":9,\"name\":\"Warp Disruptor II Blueprint\",\"icon\":\"04_09\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    @Test
    public void test_lookupType_FullSearch_FourWords_Issue31() throws Exception {
        URL url = new URL(baseUrl + "/lookupBlueprintType/small+energy+transfer+ii");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Accept", "application/json");
        assertThat(connection.getResponseCode(), equalTo(200));
        assertThat(getResponse(connection), equalTo("[{\"itemTypeID\":1191,\"itemCategoryID\":9,\"name\":\"Small Energy Transfer Array II Blueprint\",\"icon\":\"01_02\"}]"));
        assertThat(connection.getHeaderField("Content-Type"), equalTo("application/json; charset=utf-8"));
    }

    private String getResponse(HttpURLConnection connection) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        StringBuilder stringBuilder = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            stringBuilder.append(line);
        }
        reader.close();
        return stringBuilder.toString();
    }
}
