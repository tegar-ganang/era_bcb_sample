package com.jeffvannest.wizard;

import com.jeffvannest.MySpaceBlogExporterGuiApp;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import javax.swing.*;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;

/** The Wizard page that allows the user to enter the Blog URL.
 *
 * @author jvannest
 */
public class BlogUrl extends Master implements WizardPageInterface {

    private ResourceMap myResourceMap = Application.getInstance(MySpaceBlogExporterGuiApp.class).getContext().getResourceMap(BlogUrl.class);

    private static final long serialVersionUID = -2119241596588806269L;

    /**
     * @param myLabel
     */
    public BlogUrl(JLabel myLabel) {
        initComponents();
        setTitle("Blog URL");
        this.myLabel = myLabel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        txtDirections = new javax.swing.JTextArea();
        lblBlogUrl = new javax.swing.JLabel();
        txtBlogUrl = new javax.swing.JTextField();
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(BlogUrl.class);
        setBackground(resourceMap.getColor("configConnData.background"));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        setMaximumSize(new java.awt.Dimension(404, 251));
        setMinimumSize(new java.awt.Dimension(404, 251));
        setPreferredSize(new java.awt.Dimension(404, 251));
        txtDirections.setBackground(resourceMap.getColor("txtDirections.background"));
        txtDirections.setColumns(20);
        txtDirections.setEditable(false);
        txtDirections.setFont(resourceMap.getFont("txtDirections.font"));
        txtDirections.setLineWrap(true);
        txtDirections.setRows(5);
        txtDirections.setText(resourceMap.getString("txtDirections.text"));
        txtDirections.setWrapStyleWord(true);
        txtDirections.setFocusable(false);
        txtDirections.setMargin(new java.awt.Insets(10, 10, 10, 10));
        txtDirections.setName("txtDirections");
        lblBlogUrl.setText(resourceMap.getString("lblBlogUrl.text"));
        lblBlogUrl.setName("lblBlogUrl");
        txtBlogUrl.setAutoscrolls(false);
        txtBlogUrl.setMaximumSize(new java.awt.Dimension(6, 20));
        txtBlogUrl.setName("txtBlogUrl");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(txtDirections, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGap(21, 21, 21).addComponent(lblBlogUrl).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(txtBlogUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(txtDirections, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblBlogUrl).addComponent(txtBlogUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(272, Short.MAX_VALUE)));
    }

    /**
     * @see com.jeffvannest.wizard.Master#getFields()
     */
    @Override
    public HashMap<String, String> getFields() {
        HashMap<String, String> configValues = new HashMap<String, String>();
        configValues.put("blogUrl", txtBlogUrl.getText());
        return configValues;
    }

    @Override
    public boolean postPage() {
        MySpaceBlogExporterGuiApp.getApplication().getWizContainer().showStatus(myResourceMap.getString("CheckingBlogUrl.text"));
        URL url;
        try {
            url = new URL(txtBlogUrl.getText());
            URLConnection con = url.openConnection();
            con.getContentType();
            String newLink = con.getURL().toString();
            if (!newLink.equalsIgnoreCase(txtBlogUrl.getText())) {
                JOptionPane.showMessageDialog(new JFrame(), myResourceMap.getString("InvalidBlogUrl.text"), "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), myResourceMap.getString("InvalidUrl.text"), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } finally {
            MySpaceBlogExporterGuiApp.getApplication().getWizContainer().hideStatus();
        }
        if (txtBlogUrl.getText().toLowerCase().indexOf("friendid") > 0) {
            JOptionPane.showMessageDialog(new JFrame(), myResourceMap.getString("InvalidBlogUrl.text"), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        MySpaceBlogExporterGuiApp.getApplication().getMySpaceBlogExporter().setBlogUrl(txtBlogUrl.getText());
        return true;
    }

    /**
     * @see com.jeffvannest.wizard.Master#prePage(java.util.HashMap)
     */
    @Override
    public void prePage(HashMap<String, String> configValues) {
        txtBlogUrl.setText(configValues.get("blogUrl"));
        if (txtBlogUrl.getText().isEmpty() || txtBlogUrl.getText() == "") {
            txtBlogUrl.setText("http://blogs.myspace.com/");
        }
    }

    private javax.swing.JLabel lblBlogUrl;

    private javax.swing.JTextField txtBlogUrl;

    private javax.swing.JTextArea txtDirections;
}
