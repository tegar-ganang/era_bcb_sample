package newgen.presentation.administration;

import newgen.presentation.administration.*;
import java.util.*;
import org.jdom.*;
import org.jdom.output.*;
import org.jdom.input.*;
import javax.swing.*;
import java.awt.*;

/**
 *
 * @author  Administrator
 */
public class SearchFormSubDivisionAF extends javax.swing.JPanel implements javax.swing.event.CaretListener {

    /** Creates new form SearchPersonalNameAF */
    public SearchFormSubDivisionAF() {
        initComponents();
        String[] col = { java.util.ResourceBundle.getBundle("Administration").getString("FormSubDivision") };
        javax.swing.DefaultComboBoxModel dcbm = new javax.swing.DefaultComboBoxModel(col);
        this.cbSearch.setModel(dcbm);
        this.dtmSearch = new javax.swing.table.DefaultTableModel(col, 0) {

            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.tableSearch.setModel(this.dtmSearch);
        this.tableSearch.getColumnModel().getColumn(0).setPreferredWidth(300);
        this.fillTableValues();
        this.tfSearch.addCaretListener(this);
        newgen.presentation.NewGenMain.getAppletInstance().applyOrientation(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jToolBar1 = new javax.swing.JToolBar();
        bnew = new javax.swing.JButton();
        bmodify = new javax.swing.JButton();
        bdelete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbSearch = new javax.swing.JComboBox();
        tfSearch = new newgen.presentation.UnicodeTextField();
        ccase = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSearch = new javax.swing.JTable();
        setLayout(new java.awt.BorderLayout());
        bnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/newcomp.gif")));
        bnew.setMnemonic('n');
        bnew.setToolTipText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("New"));
        bnew.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnewActionPerformed(evt);
            }
        });
        jToolBar1.add(bnew);
        bmodify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/modify.gif")));
        bmodify.setMnemonic('m');
        bmodify.setToolTipText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Modify"));
        jToolBar1.add(bmodify);
        bdelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/DELETE.GIF")));
        bdelete.setMnemonic('d');
        bdelete.setToolTipText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Delete"));
        jToolBar1.add(bdelete);
        add(jToolBar1, java.awt.BorderLayout.NORTH);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));
        jLabel1.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("SearchFor"));
        jPanel2.add(jLabel1);
        jPanel2.add(cbSearch);
        jPanel2.add(tfSearch);
        ccase.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("MatchCase"));
        ccase.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jPanel2.add(ccase);
        jPanel1.add(jPanel2);
        jPanel3.setLayout(new java.awt.BorderLayout());
        tableSearch.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] {}));
        tableSearch.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tableSearch);
        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        jPanel1.add(jPanel3);
        add(jPanel1, java.awt.BorderLayout.CENTER);
    }

    private void bnewActionPerformed(java.awt.event.ActionEvent evt) {
        newgen.presentation.administration.NewFormSubDivisionAFDialog npafd = new newgen.presentation.administration.NewFormSubDivisionAFDialog();
        npafd.setFromSearch(true);
        npafd.show();
        this.dtmSearch.setRowCount(0);
        this.fillTableValues();
    }

    public void fillTableValues() {
        java.util.ArrayList cpool = newgen.presentation.NewGenMain.getAppletInstance().getCataloguingPool();
        String xmlreq = AdministrationXMLGenerator.getInstance().getPoolFormSubDivision("6", cpool);
        System.out.println(xmlreq);
        try {
            java.net.URL url = new java.net.URL(ResourceBundle.getBundle("Administration").getString("ServerURL") + ResourceBundle.getBundle("Administration").getString("ServletSubPath") + "SubDivisionServlet");
            java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection();
            urlconn.setDoOutput(true);
            java.io.OutputStream dos = urlconn.getOutputStream();
            dos.write(xmlreq.getBytes());
            java.io.InputStream ios = urlconn.getInputStream();
            SAXBuilder saxb = new SAXBuilder();
            Document retdoc = saxb.build(ios);
            Element rootelement = retdoc.getRootElement();
            java.util.List onelist = rootelement.getChildren();
            for (int i = 0; i < onelist.size(); i++) {
                Element rec = (Element) onelist.get(i);
                Object[] r = new Object[1];
                String[] formlib = new String[2];
                formlib[0] = rec.getChild("FormSubDivisionId").getText();
                formlib[1] = rec.getChild("LibraryId").getText();
                this.formid_libid.add(formlib);
                r[0] = rec.getChild("Name").getText();
                this.dtmSearch.addRow(r);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void caretUpdate(javax.swing.event.CaretEvent caretEvent) {
        if (caretEvent.getSource().equals(this.tfSearch)) {
            tableSelection();
        }
    }

    public void tableSelection() {
        this.tableSearch.clearSelection();
        String typetext = this.tfSearch.getText();
        ListSelectionModel ls = tableSearch.getSelectionModel();
        for (int i = 0; i < dtmSearch.getRowCount(); i++) {
            String tabtext = "";
            try {
                tabtext = (tableSearch.getValueAt(i, tableSearch.getColumnModel().getColumnIndex(this.cbSearch.getSelectedItem()))).toString();
            } catch (Exception pot) {
                System.out.println(pot);
            }
            typetext = typetext.trim();
            if (typetext.length() > 0) {
                try {
                    if (!ccase.isSelected()) {
                        typetext = typetext.toUpperCase();
                        tabtext = tabtext.toUpperCase();
                    }
                    if (typetext.equals(tabtext.substring(0, typetext.length()))) {
                        ls.addSelectionInterval(i, i);
                        sim++;
                        Rectangle rect = tableSearch.getCellRect(tableSearch.getSelectedRow(), 0, false);
                        JViewport vp = this.jScrollPane1.getViewport();
                        Point p = rect.getLocation();
                        vp.setViewPosition(p);
                        vp.repaint();
                        this.jScrollPane1.setViewport(vp);
                        JScrollBar sbr = this.jScrollPane1.getVerticalScrollBar();
                        sbr.setUnitIncrement(1);
                        this.jScrollPane1.setVerticalScrollBar(sbr);
                        tableSearch.repaint();
                    }
                } catch (Exception e) {
                }
            }
        }
        tableSearch.setSelectionModel(ls);
    }

    public Object[] getSelectedValues() {
        int selectedrow = this.tableSearch.getSelectedRow();
        Object[] retobj = new Object[1];
        if (selectedrow == -1) {
        } else {
            retobj[0] = this.dtmSearch.getValueAt(selectedrow, 0).toString();
        }
        return retobj;
    }

    public Object[] getSelectedValuesWithKey() {
        int selectedrow = this.tableSearch.getSelectedRow();
        Object[] retobj = new Object[3];
        if (selectedrow == -1) {
        } else {
            retobj[0] = this.dtmSearch.getValueAt(selectedrow, 0).toString();
            retobj[1] = ((String[]) this.formid_libid.get(selectedrow))[0];
            retobj[2] = ((String[]) this.formid_libid.get(selectedrow))[1];
        }
        return retobj;
    }

    private javax.swing.JButton bdelete;

    private javax.swing.JButton bmodify;

    private javax.swing.JButton bnew;

    private javax.swing.JComboBox cbSearch;

    private javax.swing.JCheckBox ccase;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JToolBar jToolBar1;

    private javax.swing.JTable tableSearch;

    private newgen.presentation.UnicodeTextField tfSearch;

    private javax.swing.table.DefaultTableModel dtmSearch;

    private java.util.ArrayList formid_libid = new java.util.ArrayList();

    private int sim = 0;
}
