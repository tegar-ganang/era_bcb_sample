package pastebin;

import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import looknfeel.LnFListener;

/**
 *
 * @author Rajgopal
 */
public class WebPoster extends javax.swing.JDialog {

    private String apiKey = "LxFrG8UWauaS1zRE9okcUd9WaBYIIyOE";

    private String content;

    private String description_suffix = "\n--\nPosted from OrkutCodePoster.\n" + "http://sourceforge.net/projects/orkutcodeposter/";

    private String type;

    private WebPosterPrefs pref;

    private LnFListener lnf;

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    /** Creates new form WebPoster
     * @param parent
     * @param modal 
     */
    public WebPoster(java.awt.Frame parent, boolean modal, LnFListener lnf) {
        super(parent, modal);
        initComponents();
        this.lnf = lnf;
        pref = new WebPosterPrefs();
        readPrefs();
    }

    @Override
    protected JRootPane createRootPane() {
        ActionListener actionListener = new ActionListener() {

            public void actionPerformed(ActionEvent actionEvent) {
                setVisible(false);
            }
        };
        KeyStroke stroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        JRootPane myRootPane = new JRootPane();
        myRootPane.registerKeyboardAction(actionListener, stroke, JComponent.WHEN_IN_FOCUSED_WINDOW);
        return myRootPane;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        nameLabel = new javax.swing.JLabel();
        nameTextBox = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        expiryLabel = new javax.swing.JLabel();
        expiryComboBox = new javax.swing.JComboBox();
        descriptionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        savePublishButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Publisher Settings");
        nameLabel.setText("Name: ");
        nameTextBox.setFont(new java.awt.Font("Courier New", 0, 11));
        typeLabel.setText("Type : ");
        typeComboBox.setFont(new java.awt.Font("Courier New", 0, 11));
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Raw", "C", "C++", "Java" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });
        expiryLabel.setText("Expiry : ");
        expiryComboBox.setFont(new java.awt.Font("Courier New", 0, 11));
        expiryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Never", "1 year", "1 month", "1 day" }));
        expiryComboBox.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expiryComboBoxActionPerformed(evt);
            }
        });
        descriptionLabel.setText("Description : ");
        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Courier New", 0, 12));
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        savePublishButton.setText("Save and publish");
        savePublishButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePublishButtonActionPerformed(evt);
            }
        });
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(layout.createSequentialGroup().addContainerGap().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(descriptionLabel).add(layout.createSequentialGroup().add(nameLabel).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(nameTextBox, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)).add(layout.createSequentialGroup().add(typeLabel).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(typeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED).add(expiryLabel).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(expiryComboBox, 0, 119, Short.MAX_VALUE)).add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE).add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup().add(savePublishButton).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(saveButton).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(cancelButton))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(layout.createSequentialGroup().addContainerGap().add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(nameLabel).add(nameTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(typeLabel).add(expiryLabel).add(expiryComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(typeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(descriptionLabel).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(savePublishButton).add(cancelButton).add(saveButton)).addContainerGap(31, Short.MAX_VALUE)));
        pack();
    }

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void expiryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {
        save();
        dispose();
    }

    private void savePublishButtonActionPerformed(java.awt.event.ActionEvent evt) {
        save();
        String reply = post();
        if (reply.charAt(0) != '*') JOptionPane.showMessageDialog(this, reply, "Failed to publish at http://pastebin.ca", JOptionPane.NO_OPTION); else JOptionPane.showInputDialog(this, reply.substring(1, 49), "Publish to http://pastebin.ca", JOptionPane.NO_OPTION, null, null, reply.substring(48));
        dispose();
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
    }

    @Override
    public void setVisible(boolean value) {
        if (content == null || content.equals("")) savePublishButton.setEnabled(false); else savePublishButton.setEnabled(true);
        Rectangle r = getGraphicsConfiguration().getBounds();
        setLocation(r.width / 2 - getWidth() / 2, r.height / 2 - getHeight() / 2);
        try {
            lnf.setThemeToContainer(this);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        getRootPane().setDefaultButton(saveButton);
        super.setVisible(value);
    }

    private int getType(String s) {
        if (s.equalsIgnoreCase("C")) return 3; else if (s.equalsIgnoreCase("C++")) return 4; else if (s.equalsIgnoreCase("Java")) return 7;
        return 1;
    }

    private void save() {
        pref.setDescription(descriptionTextArea.getText());
        pref.setName(nameTextBox.getText());
        pref.setType((String) typeComboBox.getSelectedItem());
        pref.setExpiry((String) expiryComboBox.getSelectedItem());
        pref.writePreferences();
    }

    public String post() {
        if (content == null || content.equals("")) return "Type something to publish!!";
        OutputStreamWriter wr = null;
        BufferedReader rd = null;
        try {
            String data = URLEncoder.encode("api", "UTF-8") + "=" + URLEncoder.encode(apiKey, "UTF-8");
            data += "&" + URLEncoder.encode("content", "UTF-8") + "=" + URLEncoder.encode(content, "UTF-8");
            data += "&" + URLEncoder.encode("description", "UTF-8") + "=" + URLEncoder.encode(descriptionTextArea.getText() + description_suffix, "UTF-8");
            data += "&" + URLEncoder.encode("expiry", "UTF-8") + "=" + URLEncoder.encode((String) expiryComboBox.getSelectedItem(), "UTF-8");
            data += "&" + URLEncoder.encode("type", "UTF-8") + "=" + URLEncoder.encode(type, "UTF-8");
            data += "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(nameTextBox.getText(), "UTF-8");
            URL url = new URL("http://pastebin.ca/quiet-paste.php");
            URLConnection conn = url.openConnection();
            conn.setDoOutput(true);
            wr = new OutputStreamWriter(conn.getOutputStream());
            wr.write(data);
            wr.flush();
            rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;
            line = rd.readLine();
            if (line == null || line.length() < 8 || !line.substring(0, 8).equals("SUCCESS:")) return "Unknown error in publishing the post"; else return "*Publish successful.! The link to your post is.: " + "http://pastebin.ca/" + line.substring(8);
        } catch (IOException ex) {
            return "Unable to connect to http://pastebin.ca/\nPlease check your internet connection";
        } finally {
            try {
                if (wr != null) wr.close();
                if (rd != null) rd.close();
            } catch (IOException ex) {
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                WebPoster dialog = new WebPoster(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private javax.swing.JButton cancelButton;

    private javax.swing.JLabel descriptionLabel;

    private javax.swing.JTextArea descriptionTextArea;

    private javax.swing.JComboBox expiryComboBox;

    private javax.swing.JLabel expiryLabel;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JLabel nameLabel;

    private javax.swing.JTextField nameTextBox;

    private javax.swing.JButton saveButton;

    private javax.swing.JButton savePublishButton;

    private javax.swing.JComboBox typeComboBox;

    private javax.swing.JLabel typeLabel;

    private void readPrefs() {
        nameTextBox.setText(pref.getName());
        descriptionTextArea.setText(pref.getDescription());
        type = "" + getType(pref.getType());
        typeComboBox.setSelectedItem(pref.getType());
        expiryComboBox.setSelectedItem(pref.getExpiry());
    }
}
