package org.project.trunks.generation;

import java.io.*;
import java.util.*;
import java.net.*;
import org.project.trunks.utilities.*;

/**
 * Create a XML file
 * Description:
 * @author TRK
 */
public class GenXml {

    /**
   * Logger
   */
    private static org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory.getLog(GenXml.class);

    /**
	 * Layout of the xml file - generated by the user
	 */
    protected String _layout;

    /**
	 * Content of the xml file - generated by the user
	 */
    protected StringBuffer _content;

    protected boolean caseSensitive;

    public static final String cdata_start = "<![CDATA[", cdata_end = "]]>";

    protected String nl = "\n";

    /**
     * Constructor
     */
    public GenXml() {
        _layout = "";
        _content = new StringBuffer("");
    }

    /**
     * putContent between CDATA
     * @param content
     * @return
     */
    public static String putContent(String content) {
        return cdata_start + content + cdata_end;
    }

    /**
     * Create Xml File
     * @return String represents the content of the Xml file
     * @exception Exception createXml Exception
     */
    public String createXml() throws Exception {
        try {
            String sFile = "<?xml version=\"1.0\" encoding=\"" + StringUtilities.XML_DEFAULT_ENCODING + "\"?> " + nl + "   <ROOT> " + nl + "        <ROOTLAYOUT> " + nl + "          <TITLE>Web Project</TITLE> " + nl + "          <SUBTITLE>Liste</SUBTITLE> " + nl + "          <FOOTER> " + nl + "             <LINE> " + nl + "                <CONTENT_L>Trunks - Date de cr�ation : 03/05/2002</CONTENT_L> " + nl + "                <CONTENT_R>Web Project - Liste</CONTENT_R> " + nl + "             </LINE> " + nl + "             <LINE> " + nl + "               <CONTENT_L> </CONTENT_L> " + nl + "               <CONTENT_R> </CONTENT_R> " + nl + "             </LINE> " + nl + "           </FOOTER> " + nl + "        </ROOTLAYOUT> " + nl + "" + nl + "        <ROOTCONTENT> " + nl + "          <LIST> " + nl + "             <T_ELM> " + nl + "                <T_COL_1>ID</T_COL_1> " + nl + "                <T_COL_2>Title</T_COL_2> " + nl + "             </T_ELM> " + nl + "             <ELM> " + nl + "                <COL_1>1</COL_1> " + nl + "                <COL_2>aaaaaaaaaaaaaaaaaaaaa</COL_2> " + nl + "             </ELM> " + nl + "             <ELM> " + nl + "                <COL_1>2</COL_1> " + nl + "                <COL_2>bbbbbbbbbbbbbbbbbbbbb</COL_2> " + nl + "             </ELM> " + nl + "         </LIST> " + nl + "         <INFO> " + nl + "           <T_INFO> " + nl + "             Informations " + nl + "           </T_INFO> " + nl + "           <LINE> " + nl + "                <CONTENT_L>R�sultat : </CONTENT_L> " + nl + "                <CONTENT_R>4</CONTENT_R> " + nl + "           </LINE> " + nl + "           <LINE> " + nl + "                <CONTENT_L> </CONTENT_L> " + nl + "                <CONTENT_R> </CONTENT_R> " + nl + "           </LINE> " + nl + "         </INFO> " + nl + "       </ROOTCONTENT> " + nl + "   </ROOT>";
            return sFile;
        } catch (Exception e) {
            throw new Exception(" Exception - CreateXml : " + e.getMessage());
        }
    }

    /**
     * Get beginning of the Xml File
     * @return Beginning of the Xml File
     */
    public String getBOF() {
        return "<?xml version=\"1.0\" encoding=\"" + StringUtilities.XML_DEFAULT_ENCODING + "\"?> " + nl + "   <ROOT> " + nl;
    }

    /**
     * Get layout of the Xml File
     * @return Layout of the Xml File
     */
    public String getLayout() {
        return _layout;
    }

    /**
     * Get content of the Xml File
     * @return Content of the Xml File
     */
    public String getContent() {
        return "" + nl + "        <ROOTCONTENT> " + nl + _content + "        </ROOTCONTENT> " + nl;
    }

    /**
     * Get end of the Xml File
     * @return End of the Xml File
     */
    public String getEOF() {
        return "   </ROOT>";
    }

    /**
		* Set layout of the Xml File
		* @param title Page Title
		* @param subTitle Page sub title
		* @param vFooter Page Footer
		* @exception Exception setLayout Exception
		*/
    public void setLayout(String title, String subTitle, Vector vFooter) throws Exception {
        setLayout(title, subTitle, "", vFooter);
    }

    /**
     * Set layout of the Xml File
     * @param title Page Title
     * @param subTitle Page sub title
     * @param vFooter Page Footer
     * @exception Exception setLayout Exception
     */
    public void setLayout(String title, String subTitle, String subTitle2, Vector vFooter) throws Exception {
        if (title == null) title = "";
        if (subTitle == null) subTitle = "";
        if (vFooter == null) vFooter = new Vector();
        _layout = "        <ROOTLAYOUT> " + nl + "          <TITLE>" + putContent(title) + "</TITLE> " + nl + "          <SUBTITLE>" + putContent(subTitle) + "</SUBTITLE> " + nl + "          <SUBTITLE2>" + putContent(StringUtilities.getNString(subTitle2)) + "</SUBTITLE2> " + nl + "          <FOOTER> " + nl;
        for (int i = 0; i < vFooter.size(); i += 2) {
            _layout += "             <LINE> " + nl + "                <CONTENT_L>" + putContent((String) vFooter.elementAt(i)) + "</CONTENT_L> " + nl + "                <CONTENT_R>" + putContent((String) vFooter.elementAt(i + 1)) + "</CONTENT_R> " + nl + "             </LINE> " + nl;
        }
        _layout += "          </FOOTER> " + nl + "        </ROOTLAYOUT> " + nl;
    }

    /**
     * Add a table-list to content of the Xml File
     * @param tagListName Name of the tag for the list
     * @param vListTitle Vector with column titles
     * @param vListElm Vector containing element list
     * @exception Exception addContentList Exception
     */
    public void addContentList(String tagListName, Vector vListTitle, Vector vListElm) throws Exception {
        try {
            if (tagListName == null || tagListName.trim().equals("")) tagListName = "LIST";
            tagListName = tagListName.toUpperCase();
            _content.append("          <" + tagListName + "> " + nl + "             <T_ELM> " + nl);
            int nbCol = vListTitle.size();
            for (int i = 0; i < nbCol; i++) {
                _content.append("                <T_COL_" + (i + 1) + ">" + putContent((String) vListTitle.elementAt(i)) + "</T_COL_" + (i + 1) + "> " + nl);
            }
            _content.append("             </T_ELM> " + nl);
            int nbElm = 0;
            for (int j = 0; j < vListElm.size(); j += nbCol) {
                nbElm++;
                _content.append("             <ELM> " + nl);
                for (int i = 0; i < nbCol; i++) {
                    _content.append("                <COL_" + (i + 1) + ">" + putContent((String) vListElm.elementAt(j + i)) + "</COL_" + (i + 1) + "> " + nl);
                }
                _content.append("             </ELM> " + nl);
            }
            _content.append("          </" + tagListName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addContentList : " + e.getMessage());
        }
    }

    /**
     * Add a table-list to content of the Xml File
     * @param tagListName Name of the tag for the list
     * @param nbCol Number of column
     * @param vListElm Vector containing element list
     * @exception Exception addContentList Exception
     */
    public void addContentList(String tagListName, int nbCol, Vector vListElm) throws Exception {
        try {
            if (tagListName == null || tagListName.trim().equals("")) tagListName = "LIST";
            tagListName = tagListName.toUpperCase();
            _content.append("          <" + tagListName + "> " + nl);
            int nbElm = 0;
            for (int j = 0; j < vListElm.size(); j += nbCol) {
                nbElm++;
                _content.append("             <ELM> " + nl);
                for (int i = 0; i < nbCol; i++) {
                    _content.append("                <COL_" + (i + 1) + ">" + putContent((String) vListElm.elementAt(j + i)) + "</COL_" + (i + 1) + "> " + nl);
                }
                _content.append("             </ELM> " + nl);
            }
            _content.append("          </" + tagListName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addContentList : " + e.getMessage());
        }
    }

    /**
     * Add a tag to content of the Xml File
     * @param tagName Name of the tag
     * @param value Value for this tag
     * @exception Exception addContentList Exception
     */
    public void addContentTag(String tagName, String value) throws Exception {
        try {
            if (tagName == null || tagName.trim().equals("")) throw new Exception(" Invalid tag name in addContentTag ");
            if (!caseSensitive) tagName = tagName.toUpperCase();
            _content.append("          <" + tagName + ">" + putContent(value) + "</" + tagName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addContentTag : " + e.getMessage());
        }
    }

    /**
     * Add an open tag to content of the Xml File
     * @param tagName Name of the tag
     * @exception Exception addContentList Exception
     */
    public void addOpenContentTag(String tagName) throws Exception {
        try {
            if (tagName == null || tagName.trim().equals("")) throw new Exception(" Invalid tag name in addOpenContentTag ");
            if (!caseSensitive) tagName = tagName.toUpperCase();
            _content.append("          <" + tagName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addOpenContentTag : " + e.getMessage());
        }
    }

    /**
     * Add an closed tag to content of the Xml File
     * @param tagName Name of the tag
     * @exception Exception addContentList Exception
     */
    public void addCloseContentTag(String tagName) throws Exception {
        try {
            if (tagName == null || tagName.trim().equals("")) throw new Exception(" Invalid tag name in addCloseContentTag ");
            if (!caseSensitive) tagName = tagName.toUpperCase();
            _content.append("          </" + tagName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addCloseContentTag : " + e.getMessage());
        }
    }

    /**
     * Get content of the Xml File
     * @param vList Vector with column
     * @param vListElm Vector with element
     * @exception Exception setContent Exception
     */
    public void addContentInfo(Vector vList, Vector vListElm) throws Exception {
        try {
            _content.append("");
        } catch (Exception e) {
            throw new Exception(" Exception - addContentInfo : " + e.getMessage());
        }
    }

    /**
		 * addOpenBlock
		 * @throws java.lang.Exception
		 */
    public void addOpenBlock(String tagName) throws Exception {
        try {
            if (tagName == null || tagName.trim().equals("")) throw new Exception(" Invalid tag name in addOpenContentTag ");
            if (!caseSensitive) tagName = tagName.toUpperCase();
            _content.append("          <" + tagName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addOpenBlock : " + e.getMessage());
        }
    }

    /**
		 * addOpenBlockElm
		 * @throws java.lang.Exception
		 */
    public void addOpenBlockElm() throws Exception {
        try {
            _content.append("             <row> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addOpenBlockElm : " + e.getMessage());
        }
    }

    /**
		 * addClosedBlock
		 * @throws java.lang.Exception
		 */
    public void addClosedBlock(String tagName) throws Exception {
        try {
            if (tagName == null || tagName.trim().equals("")) throw new Exception(" Invalid tag name in addClosedBlock ");
            if (!caseSensitive) tagName = tagName.toUpperCase();
            _content.append("          </" + tagName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addClosedBlock : " + e.getMessage());
        }
    }

    /**
		 * addClosedBlockElm
			* @throws java.lang.Exception
		 */
    public void addClosedBlockElm() throws Exception {
        try {
            _content.append("             </row> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addClosedBlockElm : " + e.getMessage());
        }
    }

    /**
     * Write Xml File
     * @param xmlName Name of the xml file
     * @exception Exception WriteXml Exception
     */
    public void writeXml(String xmlName) throws Exception {
        this.addContentTag("_SYSDATE_", DateUtil.getSysdate());
        StringBuffer sFile = new StringBuffer("");
        sFile.append(getBOF());
        sFile.append(new String("<!-- G�n�ration d'un document XML de donn�es ( format '" + StringUtilities.XML_DEFAULT_ENCODING + "') -->"));
        sFile.append(getLayout());
        sFile.append(getContent());
        sFile.append(getEOF());
        writeXml(xmlName, sFile.toString());
    }

    /**
     * Write Xml File
     * @param xmlName Name of the xml file
     * @param sFile String represents the content of the Xml file
     * @exception Exception WriteXml Exception
     */
    protected void writeXml(String xmlName, String sFile) throws Exception {
        log.info("<< GenXml.writeXml xmlName = " + xmlName);
        try {
            File f = null;
            DataOutputStream dos = null;
            if (xmlName.indexOf("http:") == -1) {
                log.info("<< GenXml.writeXml - file - BufferedWriter");
                f = new File(xmlName);
                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(f), StringUtilities.XML_DEFAULT_ENCODING));
                out.write(sFile);
                out.flush();
                out.close();
            } else {
                log.info("<< GenXml.writeXml - url");
                URL url = new URL(xmlName);
                URLConnection connection = url.openConnection();
                connection.setDoOutput(true);
                PrintWriter printWriter = new PrintWriter(connection.getOutputStream());
                printWriter.write(sFile);
                printWriter.flush();
                printWriter.close();
            }
        } catch (Exception e) {
            log.info("<< GenXml.writeXml - Exception : '" + e.getMessage() + "'");
            throw new Exception(" Exception - writeXml : " + e.getMessage());
        }
    }

    /**
		 * Add a table-list to content of the Xml File
		 * @param tagListName Name of the tag for the list
		 * @param vColumn Column name
		 * @param vListElm Vector containing element list
		 * @exception Exception addContentList Exception
		 */
    public void addCustomTagContentList(String tagListName, Vector vColumn, Vector vListElm) throws Exception {
        try {
            if (tagListName == null || tagListName.trim().equals("")) tagListName = "LIST";
            tagListName = tagListName.toUpperCase();
            _content.append("          <" + tagListName + "> " + nl);
            int nbElm = 0;
            int nbCol = vColumn.size();
            for (int j = 0; j < vListElm.size(); j += nbCol) {
                nbElm++;
                _content.append("             <ELM> " + nl);
                for (int i = 0; i < nbCol; i++) {
                    String tag_nomCol = (String) vColumn.elementAt(i);
                    if (StringUtilities.getNString(tag_nomCol).equals("")) tag_nomCol = "COL_" + (i + 1);
                    _content.append("                <" + tag_nomCol + ">" + putContent((String) vListElm.elementAt(j + i)) + "</" + tag_nomCol + "> " + nl);
                }
                _content.append("             </ELM> " + nl);
            }
            _content.append("          </" + tagListName + "> " + nl);
        } catch (Exception e) {
            throw new Exception(" Exception - addContentList : " + e.getMessage());
        }
    }

    public void setReportType(String reportType) throws Exception {
        this.addContentTag("REPORT_TYPE", reportType);
    }

    public boolean isCaseSensitive() {
        return caseSensitive;
    }

    public void setCaseSensitive(boolean caseSensitive) {
        this.caseSensitive = caseSensitive;
    }

    public String getNl() {
        return nl;
    }

    public void setNl(String nl) {
        this.nl = nl;
    }
}
